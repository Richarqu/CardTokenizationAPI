//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CardTokenizationAPI.CardService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CardService.CardsSoap")]
    public interface CardsSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSelectPINAndUpdatePINOffset_GO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetSelectPINAndUpdatePINOffset_GO(string pan, string exp, string selectedPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSelectPINAndUpdatePINOffset_GO", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetSelectPINAndUpdatePINOffset_GOAsync(string pan, string exp, string selectedPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetImalActiveCardsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetImalActiveCardsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetImalActiveCardsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetImalActiveCardsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnrolSafetoken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string EnrolSafetoken(CardTokenizationAPI.CardService.SafetokenDet Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnrolSafetoken", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EnrolSafetokenAsync(CardTokenizationAPI.CardService.SafetokenDet Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateAndUpdateRandomPIN_GO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GenerateAndUpdateRandomPIN_GO(string pan, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateAndUpdateRandomPIN_GO", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GenerateAndUpdateRandomPIN_GOAsync(string pan, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveCardList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CardTokenizationAPI.CardService.CardDetail[] GetActiveCardList(string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveCardList", ReplyAction="*")]
        System.Threading.Tasks.Task<CardTokenizationAPI.CardService.CardDetail[]> GetActiveCardListAsync(string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFarePayCardByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetFarePayCardByID(string customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFarePayCardByID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetFarePayCardByIDAsync(string customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEnabledChannelsForNonNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEnabledChannelsForNonNuban(string pan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEnabledChannelsForNonNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEnabledChannelsForNonNubanAsync(string pan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllActiveCardList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CardTokenizationAPI.CardService.CardDetail[] GetAllActiveCardList(string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllActiveCardList", ReplyAction="*")]
        System.Threading.Tasks.Task<CardTokenizationAPI.CardService.CardDetail[]> GetAllActiveCardListAsync(string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateAndUpdateRandomPIN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GenerateAndUpdateRandomPIN(string pan, string seq_nr, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateAndUpdateRandomPIN", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GenerateAndUpdateRandomPINAsync(string pan, string seq_nr, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetATMDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetATMDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSelectPINAndUpdatePINOffset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetSelectPINAndUpdatePINOffset(string pan, string seq_nr, string exp, string selectedPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSelectPINAndUpdatePINOffset", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetSelectPINAndUpdatePINOffsetAsync(string pan, string seq_nr, string exp, string selectedPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateNewCardGO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActivateNewCardGO(string pan, string exp, string selectedPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateNewCardGO", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActivateNewCardGOAsync(string pan, string exp, string selectedPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateNewCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActivateNewCard(string pan, string seq_nr, string exp, string selectedPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateNewCard", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActivateNewCardAsync(string pan, string seq_nr, string exp, string selectedPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPINOffSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetPINOffSet(string pan, string seq, string exp, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPINOffSet", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetPINOffSetAsync(string pan, string seq, string exp, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateCVV1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerateCVV1(string pan, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateCVV1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerateCVV1Async(string pan, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateCVV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerateCVV2(string pan, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateCVV2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerateCVV2Async(string pan, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GeneratePINBlock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GeneratePINBlock(string pan, string pin, string pvki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GeneratePINBlock", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GeneratePINBlockAsync(string pan, string pin, string pvki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPINFromClearPINBlock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPINFromClearPINBlock(string pan, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPINFromClearPINBlock", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPINFromClearPINBlockAsync(string pan, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPINFromPINOffset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetPINFromPINOffset(string pan, string pin, string pvk, int pinLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPINFromPINOffset", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetPINFromPINOffsetAsync(string pan, string pin, string pvk, int pinLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPINOffSetFromSelectedPIN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetPINOffSetFromSelectedPIN(string pan, string seq_nr, string exp, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPINOffSetFromSelectedPIN", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetPINOffSetFromSelectedPINAsync(string pan, string seq_nr, string exp, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFTPFileUpload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SFTPFileUpload(string sftpHost, int sftpPort, string sftpUser, string sftpPwd, string sftpPath, string uploadFile, string sftpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFTPFileUpload", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SFTPFileUploadAsync(string sftpHost, int sftpPort, string sftpUser, string sftpPwd, string sftpPath, string uploadFile, string sftpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateCardPIN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateCardPIN(string pan, string seq_nr, string exp, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateCardPIN", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ValidateCardPINAsync(string pan, string seq_nr, string exp, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LinkAccountsToCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LinkAccountsToCard(string pan, string seq, string exp, string account_Id, string account_Type, string currency_code, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LinkAccountsToCard", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LinkAccountsToCardAsync(string pan, string seq, string exp, string account_Id, string account_Type, string currency_code, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveCards", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetActiveCards(string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveCards", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetActiveCardsAsync(string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValidNewCards", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetValidNewCards(string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValidNewCards", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetValidNewCardsAsync(string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveCardsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetActiveCardsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveCardsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetActiveCardsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveCardsWithAcctsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetActiveCardsWithAcctsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveCardsWithAcctsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetActiveCardsWithAcctsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveIMALCardsWithAcctsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetActiveIMALCardsWithAcctsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveIMALCardsWithAcctsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetActiveIMALCardsWithAcctsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllActiveCardsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllActiveCardsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllActiveCardsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllActiveCardsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValidNewCardsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetValidNewCardsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValidNewCardsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetValidNewCardsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValidNewImalCardsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetValidNewImalCardsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValidNewImalCardsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetValidNewImalCardsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLimitCardsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLimitCardsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLimitCardsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLimitCardsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetJSONActiveCardsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetJSONActiveCardsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetJSONActiveCardsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetJSONActiveCardsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetJSONActiveVISACardsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetJSONActiveVISACardsByCustomer(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetJSONActiveVISACardsByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetJSONActiveVISACardsByCustomerAsync(string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPOSTransByTerminal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CardTokenizationAPI.CardService.NIBSSFeedDto[] GetPOSTransByTerminal(string terminalID, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPOSTransByTerminal", ReplyAction="*")]
        System.Threading.Tasks.Task<CardTokenizationAPI.CardService.NIBSSFeedDto[]> GetPOSTransByTerminalAsync(string terminalID, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPOSTransByAccountNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CardTokenizationAPI.CardService.NIBSSFeedDto[] GetPOSTransByAccountNo(string accountNo, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPOSTransByAccountNo", ReplyAction="*")]
        System.Threading.Tasks.Task<CardTokenizationAPI.CardService.NIBSSFeedDto[]> GetPOSTransByAccountNoAsync(string accountNo, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertCardData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] InsertCardData(string pan, string seq, string account, string exp, string cardProg, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertCardData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> InsertCardDataAsync(string pan, string seq, string account, string exp, string cardProg, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InserWalletCardData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] InserWalletCardData(string pan, string seq, string exp, string account, string custId, string nameOnCard, string city, string state, string address, string branch, string accType, string curCode, string cardProg, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InserWalletCardData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> InserWalletCardDataAsync(string pan, string seq, string exp, string account, string custId, string nameOnCard, string city, string state, string address, string branch, string accType, string curCode, string cardProg, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardLimits", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCardLimits(string pan, string seq, string cardProgram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardLimits", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCardLimitsAsync(string pan, string seq, string cardProgram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertVirtualCardData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] InsertVirtualCardData(string issuer_nr, string pan, string seq, string account, string exp, string cardProg, string user, string stat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertVirtualCardData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> InsertVirtualCardDataAsync(string issuer_nr, string pan, string seq, string account, string exp, string cardProg, string user, string stat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatemVisaData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreatemVisaData(string refId, string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatemVisaData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreatemVisaDataAsync(string refId, string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlockCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BlockCard(string pan, string exp, string customer_id, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlockCard", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BlockCardAsync(string pan, string exp, string customer_id, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnBlockCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UnBlockCard(string pan, string exp, string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnBlockCard", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UnBlockCardAsync(string pan, string exp, string customer_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardStat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCardStat(string pan, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardStat", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCardStatAsync(string pan, string exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyCardWebLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ModifyCardWebLimit(string pan, string seq_nr, string card_program, string limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyCardWebLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ModifyCardWebLimitAsync(string pan, string seq_nr, string card_program, string limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyCardPurchaseLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ModifyCardPurchaseLimit(string pan, string seq_nr, string card_program, string limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyCardPurchaseLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ModifyCardPurchaseLimitAsync(string pan, string seq_nr, string card_program, string limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyCardPaymentLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ModifyCardPaymentLimit(string pan, string seq_nr, string card_program, string limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyCardPaymentLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ModifyCardPaymentLimitAsync(string pan, string seq_nr, string card_program, string limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetQRCodeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetQRCodeData(string account, string cardprogram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetQRCodeData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetQRCodeDataAsync(string account, string cardprogram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMPassData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetMPassData(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMPassData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetMPassDataAsync(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFullCountryList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetFullCountryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFullCountryList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetFullCountryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountryByCurrCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCountryByCurrCode(string curCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountryByCurrCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCountryByCurrCodeAsync(string curCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountryByISO2Code", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCountryByISO2Code(string isoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountryByISO2Code", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCountryByISO2CodeAsync(string isoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEnabledCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEnabledCountries(string pan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEnabledCountries", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEnabledCountriesAsync(string pan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEnabledChannels", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEnabledChannels(string pan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEnabledChannels", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEnabledChannelsAsync(string pan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnableChannel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string EnableChannel(string pan, int channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnableChannel", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EnableChannelAsync(string pan, int channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnableChannelForNonNubanCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string EnableChannelForNonNubanCustomer(string pan, int channel, string customeruniqueId, string title, string fname, string sname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnableChannelForNonNubanCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EnableChannelForNonNubanCustomerAsync(string pan, int channel, string customeruniqueId, string title, string fname, string sname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnableChannelForEnrolledNonNubanCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string EnableChannelForEnrolledNonNubanCustomer(string pan, int channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnableChannelForEnrolledNonNubanCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EnableChannelForEnrolledNonNubanCustomerAsync(string pan, int channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OnboardCustomerCardControl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string OnboardCustomerCardControl(string pan, string exp, string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OnboardCustomerCardControl", ReplyAction="*")]
        System.Threading.Tasks.Task<string> OnboardCustomerCardControlAsync(string pan, string exp, string account_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateCardPIN_GO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateCardPIN_GO(string pan, string exp, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateCardPIN_GO", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ValidateCardPIN_GOAsync(string pan, string exp, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OnboardCustomerCardControlWallet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string OnboardCustomerCardControlWallet(string pan, string exp, string customeruiqueId, string title, string fname, string sname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OnboardCustomerCardControlWallet", ReplyAction="*")]
        System.Threading.Tasks.Task<string> OnboardCustomerCardControlWalletAsync(string pan, string exp, string customeruiqueId, string title, string fname, string sname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnableCountry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string EnableCountry(string pan, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnableCountry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EnableCountryAsync(string pan, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DisableCountry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DisableCountry(string pan, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DisableCountry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DisableCountryAsync(string pan, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DisableChannel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DisableChannel(string pan, int channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DisableChannel", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DisableChannelAsync(string pan, int channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DisableChannelForNonNubanCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DisableChannelForNonNubanCustomer(string pan, int channel, string customeruiqueId, string title, string fname, string sname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DisableChannelForNonNubanCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DisableChannelForNonNubanCustomerAsync(string pan, int channel, string customeruiqueId, string title, string fname, string sname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DisableChannelForEnrolledNonNubanCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DisableChannelForEnrolledNonNubanCustomer(string pan, int channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DisableChannelForEnrolledNonNubanCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DisableChannelForEnrolledNonNubanCustomerAsync(string pan, int channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetJSONCardTrxnPerTermCurrMonth", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetJSONCardTrxnPerTermCurrMonth(string acc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetJSONCardTrxnPerTermCurrMonth", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetJSONCardTrxnPerTermCurrMonthAsync(string acc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardOutputInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetCardOutputInfo(string issuer, string card_program);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardOutputInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetCardOutputInfoAsync(string issuer, string card_program);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenOuputFileTrailer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenOuputFileTrailer(int headerCount, int recordsCount, int cardCarriers, int pinMailers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenOuputFileTrailer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenOuputFileTrailerAsync(int headerCount, int recordsCount, int cardCarriers, int pinMailers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenOuputFileHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenOuputFileHeader(
                    string issuer, 
                    string issuerName, 
                    string cardProdId, 
                    string cardProgramId, 
                    string card_program, 
                    string cardAddy1, 
                    string cardAddy2, 
                    string cardCity, 
                    string cardRegion, 
                    string cardPostal, 
                    string cardMsg1, 
                    string cardMsg2, 
                    string cardMsg3, 
                    string cardMsg4, 
                    string pinAddy1, 
                    string pinAddy2, 
                    string pinCity, 
                    string pinRegion, 
                    string pinPostal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenOuputFileHeader", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenOuputFileHeaderAsync(
                    string issuer, 
                    string issuerName, 
                    string cardProdId, 
                    string cardProgramId, 
                    string card_program, 
                    string cardAddy1, 
                    string cardAddy2, 
                    string cardCity, 
                    string cardRegion, 
                    string cardPostal, 
                    string cardMsg1, 
                    string cardMsg2, 
                    string cardMsg3, 
                    string cardMsg4, 
                    string pinAddy1, 
                    string pinAddy2, 
                    string pinCity, 
                    string pinRegion, 
                    string pinPostal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateOutputFileRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerateOutputFileRecords(
                    string servicecode, 
                    string pan, 
                    string seq_nr, 
                    string exp, 
                    string nameOnCard, 
                    string title, 
                    string firstname, 
                    string midname, 
                    string surname, 
                    string cusnum, 
                    string pinOffset, 
                    string disc, 
                    string cardAddy1, 
                    string cardAddy2, 
                    string cardCity, 
                    string cardRegion, 
                    string cardPostal, 
                    string pinAddy1, 
                    string pinAddy2, 
                    string pinCity, 
                    string pinRegion, 
                    string pinPostal, 
                    string pin_Export_key, 
                    int pinLength, 
                    string pvki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateOutputFileRecords", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerateOutputFileRecordsAsync(
                    string servicecode, 
                    string pan, 
                    string seq_nr, 
                    string exp, 
                    string nameOnCard, 
                    string title, 
                    string firstname, 
                    string midname, 
                    string surname, 
                    string cusnum, 
                    string pinOffset, 
                    string disc, 
                    string cardAddy1, 
                    string cardAddy2, 
                    string cardCity, 
                    string cardRegion, 
                    string cardPostal, 
                    string pinAddy1, 
                    string pinAddy2, 
                    string pinCity, 
                    string pinRegion, 
                    string pinPostal, 
                    string pin_Export_key, 
                    int pinLength, 
                    string pvki);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SafetokenDet : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private string address1Field;
        
        private string address2Field;
        
        private ulong cardPanField;
        
        private string emailField;
        
        private ushort expiryDateField;
        
        private string lastNameField;
        
        private ulong primaryMobileNumberField;
        
        private string surnameField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public ulong cardPan {
            get {
                return this.cardPanField;
            }
            set {
                this.cardPanField = value;
                this.RaisePropertyChanged("cardPan");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public ushort expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
                this.RaisePropertyChanged("expiryDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("lastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public ulong primaryMobileNumber {
            get {
                return this.primaryMobileNumberField;
            }
            set {
                this.primaryMobileNumberField = value;
                this.RaisePropertyChanged("primaryMobileNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
                this.RaisePropertyChanged("surname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("title");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class NIBSSFeedDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime transactionTimeField;
        
        private string panField;
        
        private string terminalIDField;
        
        private string accountNoField;
        
        private double tranAmountField;
        
        private string tranAmountSignalField;
        
        private System.DateTime feedTimeStampField;
        
        private System.DateTime transmissionTimeField;
        
        private string messageReqField;
        
        private string messageResField;
        
        private string clearingPeriodField;
        
        private string transactionIDField;
        
        private string stanNrReqField;
        
        private string stanNrResField;
        
        private string rRNReqField;
        
        private string rRNResField;
        
        private string cardAcceptorNameLocField;
        
        private string responseCodeField;
        
        private double surchargeField;
        
        private string surchargeSignalField;
        
        private string acqInstitutionIDField;
        
        private string posDataCodeField;
        
        private int cardExpiryField;
        
        private string merchantCatCodeField;
        
        private string terminalTypeField;
        
        private int currencyCodeField;
        
        private string bankCodeField;
        
        private string fwdInstitutionIDField;
        
        private string merchantNameField;
        
        private string merchantAddressField;
        
        private string merchantPhoneNoField;
        
        private string merchantAcctNoField;
        
        private string transactionFeeField;
        
        private string settledAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime TransactionTime {
            get {
                return this.transactionTimeField;
            }
            set {
                this.transactionTimeField = value;
                this.RaisePropertyChanged("TransactionTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Pan {
            get {
                return this.panField;
            }
            set {
                this.panField = value;
                this.RaisePropertyChanged("Pan");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TerminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
                this.RaisePropertyChanged("TerminalID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string AccountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
                this.RaisePropertyChanged("AccountNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double TranAmount {
            get {
                return this.tranAmountField;
            }
            set {
                this.tranAmountField = value;
                this.RaisePropertyChanged("TranAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string TranAmountSignal {
            get {
                return this.tranAmountSignalField;
            }
            set {
                this.tranAmountSignalField = value;
                this.RaisePropertyChanged("TranAmountSignal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime FeedTimeStamp {
            get {
                return this.feedTimeStampField;
            }
            set {
                this.feedTimeStampField = value;
                this.RaisePropertyChanged("FeedTimeStamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime TransmissionTime {
            get {
                return this.transmissionTimeField;
            }
            set {
                this.transmissionTimeField = value;
                this.RaisePropertyChanged("TransmissionTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string MessageReq {
            get {
                return this.messageReqField;
            }
            set {
                this.messageReqField = value;
                this.RaisePropertyChanged("MessageReq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string MessageRes {
            get {
                return this.messageResField;
            }
            set {
                this.messageResField = value;
                this.RaisePropertyChanged("MessageRes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ClearingPeriod {
            get {
                return this.clearingPeriodField;
            }
            set {
                this.clearingPeriodField = value;
                this.RaisePropertyChanged("ClearingPeriod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
                this.RaisePropertyChanged("TransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string StanNrReq {
            get {
                return this.stanNrReqField;
            }
            set {
                this.stanNrReqField = value;
                this.RaisePropertyChanged("StanNrReq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string StanNrRes {
            get {
                return this.stanNrResField;
            }
            set {
                this.stanNrResField = value;
                this.RaisePropertyChanged("StanNrRes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string RRNReq {
            get {
                return this.rRNReqField;
            }
            set {
                this.rRNReqField = value;
                this.RaisePropertyChanged("RRNReq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string RRNRes {
            get {
                return this.rRNResField;
            }
            set {
                this.rRNResField = value;
                this.RaisePropertyChanged("RRNRes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string CardAcceptorNameLoc {
            get {
                return this.cardAcceptorNameLocField;
            }
            set {
                this.cardAcceptorNameLocField = value;
                this.RaisePropertyChanged("CardAcceptorNameLoc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public double Surcharge {
            get {
                return this.surchargeField;
            }
            set {
                this.surchargeField = value;
                this.RaisePropertyChanged("Surcharge");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string SurchargeSignal {
            get {
                return this.surchargeSignalField;
            }
            set {
                this.surchargeSignalField = value;
                this.RaisePropertyChanged("SurchargeSignal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string AcqInstitutionID {
            get {
                return this.acqInstitutionIDField;
            }
            set {
                this.acqInstitutionIDField = value;
                this.RaisePropertyChanged("AcqInstitutionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string PosDataCode {
            get {
                return this.posDataCodeField;
            }
            set {
                this.posDataCodeField = value;
                this.RaisePropertyChanged("PosDataCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public int CardExpiry {
            get {
                return this.cardExpiryField;
            }
            set {
                this.cardExpiryField = value;
                this.RaisePropertyChanged("CardExpiry");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string MerchantCatCode {
            get {
                return this.merchantCatCodeField;
            }
            set {
                this.merchantCatCodeField = value;
                this.RaisePropertyChanged("MerchantCatCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string TerminalType {
            get {
                return this.terminalTypeField;
            }
            set {
                this.terminalTypeField = value;
                this.RaisePropertyChanged("TerminalType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public int CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
                this.RaisePropertyChanged("CurrencyCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
                this.RaisePropertyChanged("BankCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string FwdInstitutionID {
            get {
                return this.fwdInstitutionIDField;
            }
            set {
                this.fwdInstitutionIDField = value;
                this.RaisePropertyChanged("FwdInstitutionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string MerchantName {
            get {
                return this.merchantNameField;
            }
            set {
                this.merchantNameField = value;
                this.RaisePropertyChanged("MerchantName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string MerchantAddress {
            get {
                return this.merchantAddressField;
            }
            set {
                this.merchantAddressField = value;
                this.RaisePropertyChanged("MerchantAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string MerchantPhoneNo {
            get {
                return this.merchantPhoneNoField;
            }
            set {
                this.merchantPhoneNoField = value;
                this.RaisePropertyChanged("MerchantPhoneNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string MerchantAcctNo {
            get {
                return this.merchantAcctNoField;
            }
            set {
                this.merchantAcctNoField = value;
                this.RaisePropertyChanged("MerchantAcctNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public string TransactionFee {
            get {
                return this.transactionFeeField;
            }
            set {
                this.transactionFeeField = value;
                this.RaisePropertyChanged("TransactionFee");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        public string SettledAmount {
            get {
                return this.settledAmountField;
            }
            set {
                this.settledAmountField = value;
                this.RaisePropertyChanged("SettledAmount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CardDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string pANField;
        
        private string expiryDateField;
        
        private string customerIdField;
        
        private string cardProviderField;
        
        private string cardNameField;
        
        private string cvv2Field;
        
        private string cardStatusField;
        
        private string blockStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PAN {
            get {
                return this.pANField;
            }
            set {
                this.pANField = value;
                this.RaisePropertyChanged("PAN");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
                this.RaisePropertyChanged("ExpiryDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
                this.RaisePropertyChanged("CustomerId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CardProvider {
            get {
                return this.cardProviderField;
            }
            set {
                this.cardProviderField = value;
                this.RaisePropertyChanged("CardProvider");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CardName {
            get {
                return this.cardNameField;
            }
            set {
                this.cardNameField = value;
                this.RaisePropertyChanged("CardName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Cvv2 {
            get {
                return this.cvv2Field;
            }
            set {
                this.cvv2Field = value;
                this.RaisePropertyChanged("Cvv2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string CardStatus {
            get {
                return this.cardStatusField;
            }
            set {
                this.cardStatusField = value;
                this.RaisePropertyChanged("CardStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string BlockStatus {
            get {
                return this.blockStatusField;
            }
            set {
                this.blockStatusField = value;
                this.RaisePropertyChanged("BlockStatus");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CardsSoapChannel : CardTokenizationAPI.CardService.CardsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CardsSoapClient : System.ServiceModel.ClientBase<CardTokenizationAPI.CardService.CardsSoap>, CardTokenizationAPI.CardService.CardsSoap {
        
        public CardsSoapClient() {
        }
        
        public CardsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CardsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetSelectPINAndUpdatePINOffset_GO(string pan, string exp, string selectedPin) {
            return base.Channel.GetSelectPINAndUpdatePINOffset_GO(pan, exp, selectedPin);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSelectPINAndUpdatePINOffset_GOAsync(string pan, string exp, string selectedPin) {
            return base.Channel.GetSelectPINAndUpdatePINOffset_GOAsync(pan, exp, selectedPin);
        }
        
        public string GetImalActiveCardsByCustomer(string customer_id) {
            return base.Channel.GetImalActiveCardsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetImalActiveCardsByCustomerAsync(string customer_id) {
            return base.Channel.GetImalActiveCardsByCustomerAsync(customer_id);
        }
        
        public string EnrolSafetoken(CardTokenizationAPI.CardService.SafetokenDet Input) {
            return base.Channel.EnrolSafetoken(Input);
        }
        
        public System.Threading.Tasks.Task<string> EnrolSafetokenAsync(CardTokenizationAPI.CardService.SafetokenDet Input) {
            return base.Channel.EnrolSafetokenAsync(Input);
        }
        
        public string[] GenerateAndUpdateRandomPIN_GO(string pan, string exp) {
            return base.Channel.GenerateAndUpdateRandomPIN_GO(pan, exp);
        }
        
        public System.Threading.Tasks.Task<string[]> GenerateAndUpdateRandomPIN_GOAsync(string pan, string exp) {
            return base.Channel.GenerateAndUpdateRandomPIN_GOAsync(pan, exp);
        }
        
        public CardTokenizationAPI.CardService.CardDetail[] GetActiveCardList(string account_id) {
            return base.Channel.GetActiveCardList(account_id);
        }
        
        public System.Threading.Tasks.Task<CardTokenizationAPI.CardService.CardDetail[]> GetActiveCardListAsync(string account_id) {
            return base.Channel.GetActiveCardListAsync(account_id);
        }
        
        public string GetFarePayCardByID(string customerID) {
            return base.Channel.GetFarePayCardByID(customerID);
        }
        
        public System.Threading.Tasks.Task<string> GetFarePayCardByIDAsync(string customerID) {
            return base.Channel.GetFarePayCardByIDAsync(customerID);
        }
        
        public string GetEnabledChannelsForNonNuban(string pan) {
            return base.Channel.GetEnabledChannelsForNonNuban(pan);
        }
        
        public System.Threading.Tasks.Task<string> GetEnabledChannelsForNonNubanAsync(string pan) {
            return base.Channel.GetEnabledChannelsForNonNubanAsync(pan);
        }
        
        public CardTokenizationAPI.CardService.CardDetail[] GetAllActiveCardList(string account_id) {
            return base.Channel.GetAllActiveCardList(account_id);
        }
        
        public System.Threading.Tasks.Task<CardTokenizationAPI.CardService.CardDetail[]> GetAllActiveCardListAsync(string account_id) {
            return base.Channel.GetAllActiveCardListAsync(account_id);
        }
        
        public string[] GenerateAndUpdateRandomPIN(string pan, string seq_nr, string exp) {
            return base.Channel.GenerateAndUpdateRandomPIN(pan, seq_nr, exp);
        }
        
        public System.Threading.Tasks.Task<string[]> GenerateAndUpdateRandomPINAsync(string pan, string seq_nr, string exp) {
            return base.Channel.GenerateAndUpdateRandomPINAsync(pan, seq_nr, exp);
        }
        
        public System.Data.DataSet GetATMDetails() {
            return base.Channel.GetATMDetails();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetATMDetailsAsync() {
            return base.Channel.GetATMDetailsAsync();
        }
        
        public string[] GetSelectPINAndUpdatePINOffset(string pan, string seq_nr, string exp, string selectedPin) {
            return base.Channel.GetSelectPINAndUpdatePINOffset(pan, seq_nr, exp, selectedPin);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSelectPINAndUpdatePINOffsetAsync(string pan, string seq_nr, string exp, string selectedPin) {
            return base.Channel.GetSelectPINAndUpdatePINOffsetAsync(pan, seq_nr, exp, selectedPin);
        }
        
        public string[] ActivateNewCardGO(string pan, string exp, string selectedPin) {
            return base.Channel.ActivateNewCardGO(pan, exp, selectedPin);
        }
        
        public System.Threading.Tasks.Task<string[]> ActivateNewCardGOAsync(string pan, string exp, string selectedPin) {
            return base.Channel.ActivateNewCardGOAsync(pan, exp, selectedPin);
        }
        
        public string[] ActivateNewCard(string pan, string seq_nr, string exp, string selectedPin) {
            return base.Channel.ActivateNewCard(pan, seq_nr, exp, selectedPin);
        }
        
        public System.Threading.Tasks.Task<string[]> ActivateNewCardAsync(string pan, string seq_nr, string exp, string selectedPin) {
            return base.Channel.ActivateNewCardAsync(pan, seq_nr, exp, selectedPin);
        }
        
        public string[] GetPINOffSet(string pan, string seq, string exp, string pin) {
            return base.Channel.GetPINOffSet(pan, seq, exp, pin);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPINOffSetAsync(string pan, string seq, string exp, string pin) {
            return base.Channel.GetPINOffSetAsync(pan, seq, exp, pin);
        }
        
        public string GenerateCVV1(string pan, string exp) {
            return base.Channel.GenerateCVV1(pan, exp);
        }
        
        public System.Threading.Tasks.Task<string> GenerateCVV1Async(string pan, string exp) {
            return base.Channel.GenerateCVV1Async(pan, exp);
        }
        
        public string GenerateCVV2(string pan, string exp) {
            return base.Channel.GenerateCVV2(pan, exp);
        }
        
        public System.Threading.Tasks.Task<string> GenerateCVV2Async(string pan, string exp) {
            return base.Channel.GenerateCVV2Async(pan, exp);
        }
        
        public string[] GeneratePINBlock(string pan, string pin, string pvki) {
            return base.Channel.GeneratePINBlock(pan, pin, pvki);
        }
        
        public System.Threading.Tasks.Task<string[]> GeneratePINBlockAsync(string pan, string pin, string pvki) {
            return base.Channel.GeneratePINBlockAsync(pan, pin, pvki);
        }
        
        public string GetPINFromClearPINBlock(string pan, string pin) {
            return base.Channel.GetPINFromClearPINBlock(pan, pin);
        }
        
        public System.Threading.Tasks.Task<string> GetPINFromClearPINBlockAsync(string pan, string pin) {
            return base.Channel.GetPINFromClearPINBlockAsync(pan, pin);
        }
        
        public string[] GetPINFromPINOffset(string pan, string pin, string pvk, int pinLength) {
            return base.Channel.GetPINFromPINOffset(pan, pin, pvk, pinLength);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPINFromPINOffsetAsync(string pan, string pin, string pvk, int pinLength) {
            return base.Channel.GetPINFromPINOffsetAsync(pan, pin, pvk, pinLength);
        }
        
        public string[] GetPINOffSetFromSelectedPIN(string pan, string seq_nr, string exp, string pin) {
            return base.Channel.GetPINOffSetFromSelectedPIN(pan, seq_nr, exp, pin);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPINOffSetFromSelectedPINAsync(string pan, string seq_nr, string exp, string pin) {
            return base.Channel.GetPINOffSetFromSelectedPINAsync(pan, seq_nr, exp, pin);
        }
        
        public bool SFTPFileUpload(string sftpHost, int sftpPort, string sftpUser, string sftpPwd, string sftpPath, string uploadFile, string sftpName) {
            return base.Channel.SFTPFileUpload(sftpHost, sftpPort, sftpUser, sftpPwd, sftpPath, uploadFile, sftpName);
        }
        
        public System.Threading.Tasks.Task<bool> SFTPFileUploadAsync(string sftpHost, int sftpPort, string sftpUser, string sftpPwd, string sftpPath, string uploadFile, string sftpName) {
            return base.Channel.SFTPFileUploadAsync(sftpHost, sftpPort, sftpUser, sftpPwd, sftpPath, uploadFile, sftpName);
        }
        
        public string ValidateCardPIN(string pan, string seq_nr, string exp, string pin) {
            return base.Channel.ValidateCardPIN(pan, seq_nr, exp, pin);
        }
        
        public System.Threading.Tasks.Task<string> ValidateCardPINAsync(string pan, string seq_nr, string exp, string pin) {
            return base.Channel.ValidateCardPINAsync(pan, seq_nr, exp, pin);
        }
        
        public string LinkAccountsToCard(string pan, string seq, string exp, string account_Id, string account_Type, string currency_code, string user) {
            return base.Channel.LinkAccountsToCard(pan, seq, exp, account_Id, account_Type, currency_code, user);
        }
        
        public System.Threading.Tasks.Task<string> LinkAccountsToCardAsync(string pan, string seq, string exp, string account_Id, string account_Type, string currency_code, string user) {
            return base.Channel.LinkAccountsToCardAsync(pan, seq, exp, account_Id, account_Type, currency_code, user);
        }
        
        public string GetActiveCards(string account_id) {
            return base.Channel.GetActiveCards(account_id);
        }
        
        public System.Threading.Tasks.Task<string> GetActiveCardsAsync(string account_id) {
            return base.Channel.GetActiveCardsAsync(account_id);
        }
        
        public string GetValidNewCards(string account_id) {
            return base.Channel.GetValidNewCards(account_id);
        }
        
        public System.Threading.Tasks.Task<string> GetValidNewCardsAsync(string account_id) {
            return base.Channel.GetValidNewCardsAsync(account_id);
        }
        
        public string GetActiveCardsByCustomer(string customer_id) {
            return base.Channel.GetActiveCardsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetActiveCardsByCustomerAsync(string customer_id) {
            return base.Channel.GetActiveCardsByCustomerAsync(customer_id);
        }
        
        public string GetActiveCardsWithAcctsByCustomer(string customer_id) {
            return base.Channel.GetActiveCardsWithAcctsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetActiveCardsWithAcctsByCustomerAsync(string customer_id) {
            return base.Channel.GetActiveCardsWithAcctsByCustomerAsync(customer_id);
        }
        
        public string GetActiveIMALCardsWithAcctsByCustomer(string customer_id) {
            return base.Channel.GetActiveIMALCardsWithAcctsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetActiveIMALCardsWithAcctsByCustomerAsync(string customer_id) {
            return base.Channel.GetActiveIMALCardsWithAcctsByCustomerAsync(customer_id);
        }
        
        public string GetAllActiveCardsByCustomer(string customer_id) {
            return base.Channel.GetAllActiveCardsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetAllActiveCardsByCustomerAsync(string customer_id) {
            return base.Channel.GetAllActiveCardsByCustomerAsync(customer_id);
        }
        
        public string GetValidNewCardsByCustomer(string customer_id) {
            return base.Channel.GetValidNewCardsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetValidNewCardsByCustomerAsync(string customer_id) {
            return base.Channel.GetValidNewCardsByCustomerAsync(customer_id);
        }
        
        public string GetValidNewImalCardsByCustomer(string customer_id) {
            return base.Channel.GetValidNewImalCardsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetValidNewImalCardsByCustomerAsync(string customer_id) {
            return base.Channel.GetValidNewImalCardsByCustomerAsync(customer_id);
        }
        
        public string GetLimitCardsByCustomer(string customer_id) {
            return base.Channel.GetLimitCardsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetLimitCardsByCustomerAsync(string customer_id) {
            return base.Channel.GetLimitCardsByCustomerAsync(customer_id);
        }
        
        public string GetJSONActiveCardsByCustomer(string customer_id) {
            return base.Channel.GetJSONActiveCardsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetJSONActiveCardsByCustomerAsync(string customer_id) {
            return base.Channel.GetJSONActiveCardsByCustomerAsync(customer_id);
        }
        
        public string GetJSONActiveVISACardsByCustomer(string customer_id) {
            return base.Channel.GetJSONActiveVISACardsByCustomer(customer_id);
        }
        
        public System.Threading.Tasks.Task<string> GetJSONActiveVISACardsByCustomerAsync(string customer_id) {
            return base.Channel.GetJSONActiveVISACardsByCustomerAsync(customer_id);
        }
        
        public CardTokenizationAPI.CardService.NIBSSFeedDto[] GetPOSTransByTerminal(string terminalID, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetPOSTransByTerminal(terminalID, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<CardTokenizationAPI.CardService.NIBSSFeedDto[]> GetPOSTransByTerminalAsync(string terminalID, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetPOSTransByTerminalAsync(terminalID, startDate, endDate);
        }
        
        public CardTokenizationAPI.CardService.NIBSSFeedDto[] GetPOSTransByAccountNo(string accountNo, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetPOSTransByAccountNo(accountNo, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<CardTokenizationAPI.CardService.NIBSSFeedDto[]> GetPOSTransByAccountNoAsync(string accountNo, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetPOSTransByAccountNoAsync(accountNo, startDate, endDate);
        }
        
        public string[] InsertCardData(string pan, string seq, string account, string exp, string cardProg, string user) {
            return base.Channel.InsertCardData(pan, seq, account, exp, cardProg, user);
        }
        
        public System.Threading.Tasks.Task<string[]> InsertCardDataAsync(string pan, string seq, string account, string exp, string cardProg, string user) {
            return base.Channel.InsertCardDataAsync(pan, seq, account, exp, cardProg, user);
        }
        
        public string[] InserWalletCardData(string pan, string seq, string exp, string account, string custId, string nameOnCard, string city, string state, string address, string branch, string accType, string curCode, string cardProg, string user) {
            return base.Channel.InserWalletCardData(pan, seq, exp, account, custId, nameOnCard, city, state, address, branch, accType, curCode, cardProg, user);
        }
        
        public System.Threading.Tasks.Task<string[]> InserWalletCardDataAsync(string pan, string seq, string exp, string account, string custId, string nameOnCard, string city, string state, string address, string branch, string accType, string curCode, string cardProg, string user) {
            return base.Channel.InserWalletCardDataAsync(pan, seq, exp, account, custId, nameOnCard, city, state, address, branch, accType, curCode, cardProg, user);
        }
        
        public string GetCardLimits(string pan, string seq, string cardProgram) {
            return base.Channel.GetCardLimits(pan, seq, cardProgram);
        }
        
        public System.Threading.Tasks.Task<string> GetCardLimitsAsync(string pan, string seq, string cardProgram) {
            return base.Channel.GetCardLimitsAsync(pan, seq, cardProgram);
        }
        
        public string[] InsertVirtualCardData(string issuer_nr, string pan, string seq, string account, string exp, string cardProg, string user, string stat) {
            return base.Channel.InsertVirtualCardData(issuer_nr, pan, seq, account, exp, cardProg, user, stat);
        }
        
        public System.Threading.Tasks.Task<string[]> InsertVirtualCardDataAsync(string issuer_nr, string pan, string seq, string account, string exp, string cardProg, string user, string stat) {
            return base.Channel.InsertVirtualCardDataAsync(issuer_nr, pan, seq, account, exp, cardProg, user, stat);
        }
        
        public string CreatemVisaData(string refId, string account) {
            return base.Channel.CreatemVisaData(refId, account);
        }
        
        public System.Threading.Tasks.Task<string> CreatemVisaDataAsync(string refId, string account) {
            return base.Channel.CreatemVisaDataAsync(refId, account);
        }
        
        public string BlockCard(string pan, string exp, string customer_id, string type) {
            return base.Channel.BlockCard(pan, exp, customer_id, type);
        }
        
        public System.Threading.Tasks.Task<string> BlockCardAsync(string pan, string exp, string customer_id, string type) {
            return base.Channel.BlockCardAsync(pan, exp, customer_id, type);
        }
        
        public string UnBlockCard(string pan, string exp, string customer_id) {
            return base.Channel.UnBlockCard(pan, exp, customer_id);
        }
        
        public System.Threading.Tasks.Task<string> UnBlockCardAsync(string pan, string exp, string customer_id) {
            return base.Channel.UnBlockCardAsync(pan, exp, customer_id);
        }
        
        public string GetCardStat(string pan, string exp) {
            return base.Channel.GetCardStat(pan, exp);
        }
        
        public System.Threading.Tasks.Task<string> GetCardStatAsync(string pan, string exp) {
            return base.Channel.GetCardStatAsync(pan, exp);
        }
        
        public string ModifyCardWebLimit(string pan, string seq_nr, string card_program, string limit) {
            return base.Channel.ModifyCardWebLimit(pan, seq_nr, card_program, limit);
        }
        
        public System.Threading.Tasks.Task<string> ModifyCardWebLimitAsync(string pan, string seq_nr, string card_program, string limit) {
            return base.Channel.ModifyCardWebLimitAsync(pan, seq_nr, card_program, limit);
        }
        
        public string ModifyCardPurchaseLimit(string pan, string seq_nr, string card_program, string limit) {
            return base.Channel.ModifyCardPurchaseLimit(pan, seq_nr, card_program, limit);
        }
        
        public System.Threading.Tasks.Task<string> ModifyCardPurchaseLimitAsync(string pan, string seq_nr, string card_program, string limit) {
            return base.Channel.ModifyCardPurchaseLimitAsync(pan, seq_nr, card_program, limit);
        }
        
        public string ModifyCardPaymentLimit(string pan, string seq_nr, string card_program, string limit) {
            return base.Channel.ModifyCardPaymentLimit(pan, seq_nr, card_program, limit);
        }
        
        public System.Threading.Tasks.Task<string> ModifyCardPaymentLimitAsync(string pan, string seq_nr, string card_program, string limit) {
            return base.Channel.ModifyCardPaymentLimitAsync(pan, seq_nr, card_program, limit);
        }
        
        public string GetQRCodeData(string account, string cardprogram) {
            return base.Channel.GetQRCodeData(account, cardprogram);
        }
        
        public System.Threading.Tasks.Task<string> GetQRCodeDataAsync(string account, string cardprogram) {
            return base.Channel.GetQRCodeDataAsync(account, cardprogram);
        }
        
        public string GetMPassData(string account) {
            return base.Channel.GetMPassData(account);
        }
        
        public System.Threading.Tasks.Task<string> GetMPassDataAsync(string account) {
            return base.Channel.GetMPassDataAsync(account);
        }
        
        public System.Data.DataSet GetFullCountryList() {
            return base.Channel.GetFullCountryList();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetFullCountryListAsync() {
            return base.Channel.GetFullCountryListAsync();
        }
        
        public System.Data.DataSet GetCountryByCurrCode(string curCode) {
            return base.Channel.GetCountryByCurrCode(curCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCountryByCurrCodeAsync(string curCode) {
            return base.Channel.GetCountryByCurrCodeAsync(curCode);
        }
        
        public System.Data.DataSet GetCountryByISO2Code(string isoCode) {
            return base.Channel.GetCountryByISO2Code(isoCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCountryByISO2CodeAsync(string isoCode) {
            return base.Channel.GetCountryByISO2CodeAsync(isoCode);
        }
        
        public string GetEnabledCountries(string pan) {
            return base.Channel.GetEnabledCountries(pan);
        }
        
        public System.Threading.Tasks.Task<string> GetEnabledCountriesAsync(string pan) {
            return base.Channel.GetEnabledCountriesAsync(pan);
        }
        
        public string GetEnabledChannels(string pan) {
            return base.Channel.GetEnabledChannels(pan);
        }
        
        public System.Threading.Tasks.Task<string> GetEnabledChannelsAsync(string pan) {
            return base.Channel.GetEnabledChannelsAsync(pan);
        }
        
        public string EnableChannel(string pan, int channel) {
            return base.Channel.EnableChannel(pan, channel);
        }
        
        public System.Threading.Tasks.Task<string> EnableChannelAsync(string pan, int channel) {
            return base.Channel.EnableChannelAsync(pan, channel);
        }
        
        public string EnableChannelForNonNubanCustomer(string pan, int channel, string customeruniqueId, string title, string fname, string sname, string email) {
            return base.Channel.EnableChannelForNonNubanCustomer(pan, channel, customeruniqueId, title, fname, sname, email);
        }
        
        public System.Threading.Tasks.Task<string> EnableChannelForNonNubanCustomerAsync(string pan, int channel, string customeruniqueId, string title, string fname, string sname, string email) {
            return base.Channel.EnableChannelForNonNubanCustomerAsync(pan, channel, customeruniqueId, title, fname, sname, email);
        }
        
        public string EnableChannelForEnrolledNonNubanCustomer(string pan, int channel) {
            return base.Channel.EnableChannelForEnrolledNonNubanCustomer(pan, channel);
        }
        
        public System.Threading.Tasks.Task<string> EnableChannelForEnrolledNonNubanCustomerAsync(string pan, int channel) {
            return base.Channel.EnableChannelForEnrolledNonNubanCustomerAsync(pan, channel);
        }
        
        public string OnboardCustomerCardControl(string pan, string exp, string account_id) {
            return base.Channel.OnboardCustomerCardControl(pan, exp, account_id);
        }
        
        public System.Threading.Tasks.Task<string> OnboardCustomerCardControlAsync(string pan, string exp, string account_id) {
            return base.Channel.OnboardCustomerCardControlAsync(pan, exp, account_id);
        }
        
        public string ValidateCardPIN_GO(string pan, string exp, string pin) {
            return base.Channel.ValidateCardPIN_GO(pan, exp, pin);
        }
        
        public System.Threading.Tasks.Task<string> ValidateCardPIN_GOAsync(string pan, string exp, string pin) {
            return base.Channel.ValidateCardPIN_GOAsync(pan, exp, pin);
        }
        
        public string OnboardCustomerCardControlWallet(string pan, string exp, string customeruiqueId, string title, string fname, string sname, string email) {
            return base.Channel.OnboardCustomerCardControlWallet(pan, exp, customeruiqueId, title, fname, sname, email);
        }
        
        public System.Threading.Tasks.Task<string> OnboardCustomerCardControlWalletAsync(string pan, string exp, string customeruiqueId, string title, string fname, string sname, string email) {
            return base.Channel.OnboardCustomerCardControlWalletAsync(pan, exp, customeruiqueId, title, fname, sname, email);
        }
        
        public string EnableCountry(string pan, string country) {
            return base.Channel.EnableCountry(pan, country);
        }
        
        public System.Threading.Tasks.Task<string> EnableCountryAsync(string pan, string country) {
            return base.Channel.EnableCountryAsync(pan, country);
        }
        
        public string DisableCountry(string pan, string country) {
            return base.Channel.DisableCountry(pan, country);
        }
        
        public System.Threading.Tasks.Task<string> DisableCountryAsync(string pan, string country) {
            return base.Channel.DisableCountryAsync(pan, country);
        }
        
        public string DisableChannel(string pan, int channel) {
            return base.Channel.DisableChannel(pan, channel);
        }
        
        public System.Threading.Tasks.Task<string> DisableChannelAsync(string pan, int channel) {
            return base.Channel.DisableChannelAsync(pan, channel);
        }
        
        public string DisableChannelForNonNubanCustomer(string pan, int channel, string customeruiqueId, string title, string fname, string sname, string email) {
            return base.Channel.DisableChannelForNonNubanCustomer(pan, channel, customeruiqueId, title, fname, sname, email);
        }
        
        public System.Threading.Tasks.Task<string> DisableChannelForNonNubanCustomerAsync(string pan, int channel, string customeruiqueId, string title, string fname, string sname, string email) {
            return base.Channel.DisableChannelForNonNubanCustomerAsync(pan, channel, customeruiqueId, title, fname, sname, email);
        }
        
        public string DisableChannelForEnrolledNonNubanCustomer(string pan, int channel) {
            return base.Channel.DisableChannelForEnrolledNonNubanCustomer(pan, channel);
        }
        
        public System.Threading.Tasks.Task<string> DisableChannelForEnrolledNonNubanCustomerAsync(string pan, int channel) {
            return base.Channel.DisableChannelForEnrolledNonNubanCustomerAsync(pan, channel);
        }
        
        public string GetJSONCardTrxnPerTermCurrMonth(string acc) {
            return base.Channel.GetJSONCardTrxnPerTermCurrMonth(acc);
        }
        
        public System.Threading.Tasks.Task<string> GetJSONCardTrxnPerTermCurrMonthAsync(string acc) {
            return base.Channel.GetJSONCardTrxnPerTermCurrMonthAsync(acc);
        }
        
        public string[] GetCardOutputInfo(string issuer, string card_program) {
            return base.Channel.GetCardOutputInfo(issuer, card_program);
        }
        
        public System.Threading.Tasks.Task<string[]> GetCardOutputInfoAsync(string issuer, string card_program) {
            return base.Channel.GetCardOutputInfoAsync(issuer, card_program);
        }
        
        public string GenOuputFileTrailer(int headerCount, int recordsCount, int cardCarriers, int pinMailers) {
            return base.Channel.GenOuputFileTrailer(headerCount, recordsCount, cardCarriers, pinMailers);
        }
        
        public System.Threading.Tasks.Task<string> GenOuputFileTrailerAsync(int headerCount, int recordsCount, int cardCarriers, int pinMailers) {
            return base.Channel.GenOuputFileTrailerAsync(headerCount, recordsCount, cardCarriers, pinMailers);
        }
        
        public string GenOuputFileHeader(
                    string issuer, 
                    string issuerName, 
                    string cardProdId, 
                    string cardProgramId, 
                    string card_program, 
                    string cardAddy1, 
                    string cardAddy2, 
                    string cardCity, 
                    string cardRegion, 
                    string cardPostal, 
                    string cardMsg1, 
                    string cardMsg2, 
                    string cardMsg3, 
                    string cardMsg4, 
                    string pinAddy1, 
                    string pinAddy2, 
                    string pinCity, 
                    string pinRegion, 
                    string pinPostal) {
            return base.Channel.GenOuputFileHeader(issuer, issuerName, cardProdId, cardProgramId, card_program, cardAddy1, cardAddy2, cardCity, cardRegion, cardPostal, cardMsg1, cardMsg2, cardMsg3, cardMsg4, pinAddy1, pinAddy2, pinCity, pinRegion, pinPostal);
        }
        
        public System.Threading.Tasks.Task<string> GenOuputFileHeaderAsync(
                    string issuer, 
                    string issuerName, 
                    string cardProdId, 
                    string cardProgramId, 
                    string card_program, 
                    string cardAddy1, 
                    string cardAddy2, 
                    string cardCity, 
                    string cardRegion, 
                    string cardPostal, 
                    string cardMsg1, 
                    string cardMsg2, 
                    string cardMsg3, 
                    string cardMsg4, 
                    string pinAddy1, 
                    string pinAddy2, 
                    string pinCity, 
                    string pinRegion, 
                    string pinPostal) {
            return base.Channel.GenOuputFileHeaderAsync(issuer, issuerName, cardProdId, cardProgramId, card_program, cardAddy1, cardAddy2, cardCity, cardRegion, cardPostal, cardMsg1, cardMsg2, cardMsg3, cardMsg4, pinAddy1, pinAddy2, pinCity, pinRegion, pinPostal);
        }
        
        public string GenerateOutputFileRecords(
                    string servicecode, 
                    string pan, 
                    string seq_nr, 
                    string exp, 
                    string nameOnCard, 
                    string title, 
                    string firstname, 
                    string midname, 
                    string surname, 
                    string cusnum, 
                    string pinOffset, 
                    string disc, 
                    string cardAddy1, 
                    string cardAddy2, 
                    string cardCity, 
                    string cardRegion, 
                    string cardPostal, 
                    string pinAddy1, 
                    string pinAddy2, 
                    string pinCity, 
                    string pinRegion, 
                    string pinPostal, 
                    string pin_Export_key, 
                    int pinLength, 
                    string pvki) {
            return base.Channel.GenerateOutputFileRecords(servicecode, pan, seq_nr, exp, nameOnCard, title, firstname, midname, surname, cusnum, pinOffset, disc, cardAddy1, cardAddy2, cardCity, cardRegion, cardPostal, pinAddy1, pinAddy2, pinCity, pinRegion, pinPostal, pin_Export_key, pinLength, pvki);
        }
        
        public System.Threading.Tasks.Task<string> GenerateOutputFileRecordsAsync(
                    string servicecode, 
                    string pan, 
                    string seq_nr, 
                    string exp, 
                    string nameOnCard, 
                    string title, 
                    string firstname, 
                    string midname, 
                    string surname, 
                    string cusnum, 
                    string pinOffset, 
                    string disc, 
                    string cardAddy1, 
                    string cardAddy2, 
                    string cardCity, 
                    string cardRegion, 
                    string cardPostal, 
                    string pinAddy1, 
                    string pinAddy2, 
                    string pinCity, 
                    string pinRegion, 
                    string pinPostal, 
                    string pin_Export_key, 
                    int pinLength, 
                    string pvki) {
            return base.Channel.GenerateOutputFileRecordsAsync(servicecode, pan, seq_nr, exp, nameOnCard, title, firstname, midname, surname, cusnum, pinOffset, disc, cardAddy1, cardAddy2, cardCity, cardRegion, cardPostal, pinAddy1, pinAddy2, pinCity, pinRegion, pinPostal, pin_Export_key, pinLength, pvki);
        }
    }
}
