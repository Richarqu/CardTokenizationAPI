//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CardTokenizationAPI.BankSoap {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BankSoap.banksSoap")]
    public interface banksSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchCustomerByMobilePhone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchCustomerByMobilePhone(string mobilePhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchCustomerByMobilePhone", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchCustomerByMobilePhoneAsync(string mobilePhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchAccountsByCategoryCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchAccountsByCategoryCode(string retrievalValue, string categoryCode, string currency, bool isRetrievalValueACustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchAccountsByCategoryCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchAccountsByCategoryCodeAsync(string retrievalValue, string categoryCode, string currency, bool isRetrievalValueACustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomerStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateCustomerStatus(string customerid, string customerstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomerStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateCustomerStatusAsync(string customerid, string customerstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAccountsByBVN(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByBVNAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByBVN_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAccountsByBVN_New(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByBVN_New", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByBVN_NewAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByMobileNo2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAccountsByMobileNo2(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByMobileNo2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByMobileNo2Async(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLastNTransactionRoutine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getLastNTransactionRoutine(string nuban, int NoRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLastNTransactionRoutine", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getLastNTransactionRoutineAsync(string nuban, int NoRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetAccountDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24CAMGetAccountDetails(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetAccountDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24CAMGetAccountDetailsAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetTransactionHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24CAMGetTransactionHistory(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetTransactionHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24CAMGetTransactionHistoryAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AmountLockwithoutDateNarration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AmountLockwithoutDateNarration(string account, decimal amt, string narration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AmountLockwithoutDateNarration", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AmountLockwithoutDateNarrationAsync(string account, decimal amt, string narration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatialUnLockAmountWithRemark", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PatialUnLockAmountWithRemark(string id, string amount, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatialUnLockAmountWithRemark", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PatialUnLockAmountWithRemarkAsync(string id, string amount, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceStandingOrderWithEnddateAndRemarks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PlaceStandingOrderWithEnddateAndRemarks(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency, string enddate, string paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceStandingOrderWithEnddateAndRemarks", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PlaceStandingOrderWithEnddateAndRemarksAsync(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency, string enddate, string paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CorpCustomerCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CorpCustomerCreation(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CorpCustomerCreation", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CorpCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceRestrictionDeposits", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PlaceRestrictionDeposits(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceRestrictionDeposits", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PlaceRestrictionDepositsAsync(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveRestrictionDeposits", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RemoveRestrictionDeposits(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveRestrictionDeposits", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RemoveRestrictionDepositsAsync(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMTrxnDetailByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetATMTrxnDetailByID(string transactionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMTrxnDetailByID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetATMTrxnDetailByIDAsync(string transactionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFundsTransferDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetFundsTransferDetails(string ftref, bool historysearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFundsTransferDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetFundsTransferDetailsAsync(string ftref, bool historysearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductBalanceToday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetProductBalanceToday(string categoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductBalanceToday", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetProductBalanceTodayAsync(string categoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlCategoryBalanceForToday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        decimal GetPlCategoryBalanceForToday(string plCategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlCategoryBalanceForToday", ReplyAction="*")]
        System.Threading.Tasks.Task<decimal> GetPlCategoryBalanceForTodayAsync(string plCategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLockedEventsHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getLockedEventsHistory(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLockedEventsHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getLockedEventsHistoryAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLockedEvents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLockedEvents(string atUniqueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLockedEvents", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLockedEventsAsync(string atUniqueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLockedEventsLive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getLockedEventsLive(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLockedEventsLive", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getLockedEventsLiveAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAccountTitle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateAccountTitle(string acctno, string acctname, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAccountTitle", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateAccountTitleAsync(string acctno, string acctname, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDAOOfficer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDAOOfficer(string acctno, string dao, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDAOOfficer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDAOOfficerAsync(string acctno, string dao, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCCRNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetKYCCRNumber(string cusnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCCRNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetKYCCRNumberAsync(string cusnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetKYCDetails(string CRnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetKYCDetailsAsync(string CRnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateCustomer(string updateFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateCustomerAsync(string updateFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/nipInwardCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string nipInwardCheck(string accountNumber, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/nipInwardCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> nipInwardCheckAsync(string accountNumber, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEbContractBalancesBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] getEbContractBalancesBalance(string acctNum, string oracleConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEbContractBalancesBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> getEbContractBalancesBalanceAsync(string acctNum, string oracleConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDAO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateDAO(string DEPT_ACCT_OFF_CODE, string AREA, string NAME, string DELIVERY_POINT, string DEPT_LEVEL, string DEPT_PARENT, string STAFF_ID, string STF_EFF_DATE, string DEPARTMENT, string STATUS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDAO", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateDAOAsync(string DEPT_ACCT_OFF_CODE, string AREA, string NAME, string DELIVERY_POINT, string DEPT_LEVEL, string DEPT_PARENT, string STAFF_ID, string STF_EFF_DATE, string DEPARTMENT, string STATUS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MapDaoToAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MapDaoToAccount(string acctnum, int daocode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MapDaoToAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> MapDaoToAccountAsync(string acctnum, int daocode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDaoInfoForCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDaoInfoForCustomer(string customerid, int searchLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDaoInfoForCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDaoInfoForCustomerAsync(string customerid, int searchLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatesStaffCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreatesStaffCustomer(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatesStaffCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreatesStaffCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateIndividualCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateIndividualCustomer(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateIndividualCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateIndividualCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCorporateCustomer2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateCorporateCustomer2(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    string Incorpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string stateresidence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCorporateCustomer2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateCorporateCustomer2Async(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    string Incorpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string stateresidence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAssociationCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateAssociationCustomer(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string Incorpdate, 
                    string sms, 
                    string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAssociationCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateAssociationCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string Incorpdate, 
                    string sms, 
                    string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateAccount(string customerid, string productcode, string currency, string dt, string branch, string PND, string dao, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateAccountAsync(string customerid, string productcode, string currency, string dt, string branch, string PND, string dao, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBvn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBvn(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBvn", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBvnAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Concession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Concession(string acctnumber, string Rate, string covenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Concession", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ConcessionAsync(string acctnumber, string Rate, string covenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PerformPostingRestrictionOperation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool PerformPostingRestrictionOperation(string acctnum, string bracode, string curcode, int restrictionCode, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PerformPostingRestrictionOperation", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> PerformPostingRestrictionOperationAsync(string acctnum, string bracode, string curcode, int restrictionCode, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateInternalAcct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateInternalAcct(string customerid, string categorycode, string currency, System.DateTime dt, string branch, string dao, string shorttitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateInternalAcct", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateInternalAcctAsync(string customerid, string categorycode, string currency, System.DateTime dt, string branch, string dao, string shorttitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getRelationshipManagerDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getRelationshipManagerDetails(string daoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getRelationshipManagerDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getRelationshipManagerDetailsAsync(string daoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/generateTillAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string generateTillAccount(string tellerId, string branchCode, string currencyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/generateTillAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> generateTillAccountAsync(string tellerId, string branchCode, string currencyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCustomerDetails(string customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDetailsAsync(string customerID);
        
        // CODEGEN: Generating message contract since the wrapper name (UpdateCustomer) of message UpdateCustomerRequest does not match the default value (UpdateCustomer1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CardTokenizationAPI.BankSoap.UpdateCustomerResponse UpdateCustomer1(CardTokenizationAPI.BankSoap.UpdateCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<CardTokenizationAPI.BankSoap.UpdateCustomerResponse> UpdateCustomer1Async(CardTokenizationAPI.BankSoap.UpdateCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerMandateNoSignatory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveCustomerMandateNoSignatory(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerMandateNoSignatory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveCustomerMandateNoSignatoryAsync(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerMandate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveCustomerMandate(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerMandate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveCustomerMandateAsync(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerMandate2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveCustomerMandate2(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerMandate2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveCustomerMandate2Async(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_Update_String", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Customer_Update_String(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    string birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    string legalIssueDate, 
                    string legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    string customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    string dateOfBirth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_Update_String", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Customer_Update_StringAsync(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    string birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    string legalIssueDate, 
                    string legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    string customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    string dateOfBirth);
        
        // CODEGEN: Parameter 'birthOrIncorporationDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CardTokenizationAPI.BankSoap.Customer_UpdateResponse Customer_Update(CardTokenizationAPI.BankSoap.Customer_UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_Update", ReplyAction="*")]
        System.Threading.Tasks.Task<CardTokenizationAPI.BankSoap.Customer_UpdateResponse> Customer_UpdateAsync(CardTokenizationAPI.BankSoap.Customer_UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPresentedCheque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getPresentedCheque(string chequeNumber, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPresentedCheque", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getPresentedChequeAsync(string chequeNumber, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStoppedCheque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getStoppedCheque(string chequeNumber, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStoppedCheque", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getStoppedChequeAsync(string chequeNumber, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAllFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAllFields(string customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAllFields", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAllFieldsAsync(string customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveReferee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveReferee(string customerID, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveReferee", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveRefereeAsync(string customerID, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoForexSpotDeal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DoForexSpotDeal(
                    string counterPartyid, 
                    string dealDate_yyyyMMdd, 
                    string dealerDesk_def_00, 
                    string currencyBought, 
                    string currencySold, 
                    decimal spotRate, 
                    string dealMethod_def_RE, 
                    bool isStartOfDayMaturity, 
                    string dealerComment, 
                    string sendPayment_def_HOLD, 
                    decimal buyAmount, 
                    string valueDateBuy_yyyyMMdd, 
                    decimal sellAmount, 
                    string valueDateSell_yyyyMMdd, 
                    string sellSettlementAccount, 
                    string sellSettlementDate_yyyyMMdd, 
                    decimal sellSettlementAmount, 
                    string buySettlementAccount, 
                    string buySettlementDate_yyyyMMdd, 
                    decimal buySettlementAmount, 
                    string bankWhereAmountToBePaidAKACounterpartySSI, 
                    string bankToBankInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoForexSpotDeal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DoForexSpotDealAsync(
                    string counterPartyid, 
                    string dealDate_yyyyMMdd, 
                    string dealerDesk_def_00, 
                    string currencyBought, 
                    string currencySold, 
                    decimal spotRate, 
                    string dealMethod_def_RE, 
                    bool isStartOfDayMaturity, 
                    string dealerComment, 
                    string sendPayment_def_HOLD, 
                    decimal buyAmount, 
                    string valueDateBuy_yyyyMMdd, 
                    decimal sellAmount, 
                    string valueDateSell_yyyyMMdd, 
                    string sellSettlementAccount, 
                    string sellSettlementDate_yyyyMMdd, 
                    decimal sellSettlementAmount, 
                    string buySettlementAccount, 
                    string buySettlementDate_yyyyMMdd, 
                    decimal buySettlementAmount, 
                    string bankWhereAmountToBePaidAKACounterpartySSI, 
                    string bankToBankInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Account_AddCo_Owner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Account_AddCo_Owner(string accountNumber, string acctBranch, string co_Owner_CustId, string co_Owner_Role, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Account_AddCo_Owner", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Account_AddCo_OwnerAsync(string accountNumber, string acctBranch, string co_Owner_CustId, string co_Owner_Role, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductChange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductChange(System.DateTime effectiveDate, string newproductId, string accountnumber, string acctDomiciledBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductChange", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductChangeAsync(System.DateTime effectiveDate, string newproductId, string accountnumber, string acctDomiciledBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHvtStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHvtStatement(string accountnumber, System.DateTime startdate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHvtStatement", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHvtStatementAsync(string accountnumber, System.DateTime startdate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_UpdateResidenceStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Customer_UpdateResidenceStatus(string customerid, string residencestatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_UpdateResidenceStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Customer_UpdateResidenceStatusAsync(string customerid, string residencestatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDepositPayoutAccounts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDepositPayoutAccounts(string depositArrangementid, System.DateTime effectiveDate, string principalPayoutAcct, string interestPayoutAcct, string chargePayoutAcct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDepositPayoutAccounts", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDepositPayoutAccountsAsync(string depositArrangementid, System.DateTime effectiveDate, string principalPayoutAcct, string interestPayoutAcct, string chargePayoutAcct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInvestmentDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInvestmentDetails(string investmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInvestmentDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetInvestmentDetailsAsync(string investmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetFixedInterestRateOnLoan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetFixedInterestRateOnLoan(string arrangementID, System.DateTime effectiveDate, decimal fixedRate, string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetFixedInterestRateOnLoan", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetFixedInterestRateOnLoanAsync(string arrangementID, System.DateTime effectiveDate, decimal fixedRate, string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeFloatingKeyInterestRateOnLoan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangeFloatingKeyInterestRateOnLoan(string arrangementID, System.DateTime effectiveDate, int floatingKey, decimal marginRate, bool isIncreaseAboveKeyOrBelowKey, string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeFloatingKeyInterestRateOnLoan", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ChangeFloatingKeyInterestRateOnLoanAsync(string arrangementID, System.DateTime effectiveDate, int floatingKey, decimal marginRate, bool isIncreaseAboveKeyOrBelowKey, string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuthorizedMt202", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAuthorizedMt202(string branch, string t24UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuthorizedMt202", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAuthorizedMt202Async(string branch, string t24UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnauthorizedMt202", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUnauthorizedMt202();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnauthorizedMt202", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUnauthorizedMt202Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHvtAccountBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHvtAccountBalance(string accountnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHvtAccountBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHvtAccountBalanceAsync(string accountnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CloseAccount(string closeThisAccount, string moveBalanceToThisAccount, System.DateTime effectiveBankingDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CloseAccountAsync(string closeThisAccount, string moveBalanceToThisAccount, System.DateTime effectiveBankingDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PutRestrictionForInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PutRestrictionForInternalAccount(string acctno, string restcode, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PutRestrictionForInternalAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PutRestrictionForInternalAccountAsync(string acctno, string restcode, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MnemonicForInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MnemonicForInternalAccount(string acctno, string restcode, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MnemonicForInternalAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> MnemonicForInternalAccountAsync(string acctno, string restcode, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24SingleTxnRequeryInward", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int T24SingleTxnRequeryInward(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24SingleTxnRequeryInward", ReplyAction="*")]
        System.Threading.Tasks.Task<int> T24SingleTxnRequeryInwardAsync(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24SingleTxnRequeryInwardRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string T24SingleTxnRequeryInwardRef(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24SingleTxnRequeryInwardRef", ReplyAction="*")]
        System.Threading.Tasks.Task<string> T24SingleTxnRequeryInwardRefAsync(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24SingleTxnRequeryOutward", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int T24SingleTxnRequeryOutward(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24SingleTxnRequeryOutward", ReplyAction="*")]
        System.Threading.Tasks.Task<int> T24SingleTxnRequeryOutwardAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24NIPOUTWARDTxnRequery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int T24NIPOUTWARDTxnRequery(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24NIPOUTWARDTxnRequery", ReplyAction="*")]
        System.Threading.Tasks.Task<int> T24NIPOUTWARDTxnRequeryAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24NIPOUTWARDTxnRequeryRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string T24NIPOUTWARDTxnRequeryRef(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24NIPOUTWARDTxnRequeryRef", ReplyAction="*")]
        System.Threading.Tasks.Task<string> T24NIPOUTWARDTxnRequeryRefAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnblockUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UnblockUser(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnblockUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UnblockUserAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getT24UserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getT24UserID(string tell_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getT24UserID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getT24UserIDAsync(string tell_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getT24UserID2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getT24UserID2(string signonname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getT24UserID2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getT24UserID2Async(string signonname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsHoliday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsHoliday(string sdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsHoliday", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsHolidayAsync(string sdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankTellerID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getBankTellerID(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankTellerID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getBankTellerIDAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MandateRetrieval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MandateRetrieval(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MandateRetrieval", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MandateRetrievalAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LockAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LockAmount(string accountNo, System.DateTime sDate, System.DateTime eDate, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LockAmount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LockAmountAsync(string accountNo, System.DateTime sDate, System.DateTime eDate, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnLockAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UnLockAmount(string lockId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnLockAmount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UnLockAmountAsync(string lockId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlockAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BlockAccount(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlockAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BlockAccountAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnBlockAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UnBlockAccount(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnBlockAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UnBlockAccountAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CustomerPortfolio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CustomerPortfolio(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CustomerPortfolio", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CustomerPortfolioAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateOfBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetStateOfBranch(string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateOfBranch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetStateOfBranchAsync(string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCategory(string categorycode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCategoryAsync(string categorycode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionReQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTransactionReQuery(string accountNo, System.DateTime transdate, string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionReQuery", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTransactionReQueryAsync(string accountNo, System.DateTime transdate, string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionReQueryforNibbs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTransactionReQueryforNibbs(string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionReQueryforNibbs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTransactionReQueryforNibbsAsync(string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionReQueryByRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTransactionReQueryByRef(string accountNo, System.DateTime transdate, string refId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionReQueryByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTransactionReQueryByRefAsync(string accountNo, System.DateTime transdate, string refId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateBVN(string customrId, string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateBVNAsync(string customrId, string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/accountopeningforexistingcustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string accountopeningforexistingcustomer(string customerid, string productcode, string currency, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/accountopeningforexistingcustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> accountopeningforexistingcustomerAsync(string customerid, string productcode, string currency, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIndustries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIndustries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIndustries", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIndustriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSectors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSectors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSectors", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSectorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCategories", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTargets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTargets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTargets", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTargetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerStatusList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCustomerStatusList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerStatusList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerStatusListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranches", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOldBranchCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOldBranchCode(string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOldBranchCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetOldBranchCodeAsync(string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankDetailsBySortCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getBankDetailsBySortCode(string sortcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankDetailsBySortCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBankDetailsBySortCodeAsync(string sortcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getBankDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBankDetailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountByProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAccountByProduct(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountByProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAccountByProductAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isSMSSubscriber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string isSMSSubscriber(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isSMSSubscriber", ReplyAction="*")]
        System.Threading.Tasks.Task<string> isSMSSubscriberAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTellerLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTellerLimit(string Tellerid, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTellerLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTellerLimitAsync(string Tellerid, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerDeposit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerDeposit(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerDeposit", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerDepositAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountries", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPaymentDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getPaymentDetail(string nuban, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPaymentDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getPaymentDetailAsync(string nuban, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTransactionDetail(string nuban, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTransactionDetailAsync(string nuban, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTotalTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTotalTransaction(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTotalTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTotalTransactionAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checktAccountforRestriction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet checktAccountforRestriction(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checktAccountforRestriction", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> checktAccountforRestrictionAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTellerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTellerInfo(string tellerId, string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTellerInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTellerInfoAsync(string tellerId, string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCheque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCheque(string nuban, string chequeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCheque", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getChequeAsync(string nuban, string chequeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLoanSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getLoanSchedule(string arrangementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLoanSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getLoanScheduleAsync(string arrangementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLoanInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getLoanInfo(string arrangementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLoanInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getLoanInfoAsync(string arrangementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAccountFullInfo(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAccountFullInfoAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullInfo_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAccountFullInfo_New(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullInfo_New", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAccountFullInfo_NewAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullInfoByAppID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAccountFullInfoByAppID(string nuban, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullInfoByAppID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAccountFullInfoByAppIDAsync(string nuban, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomrInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomrInfo(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomrInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomrInfoAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomrInfoByAppID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomrInfoByAppID(string customerId, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomrInfoByAppID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomrInfoByAppIDAsync(string customerId, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getIndivCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getIndivCustomer(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getIndivCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getIndivCustomerAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAddress(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAddress", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAddressAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerContacts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerContacts(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerContacts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerContactsAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerPartys", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerPartys(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerPartys", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerPartysAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerId_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAccountsByCustomerId_New(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerId_New", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByCustomerId_NewAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAccountsByCustomerId(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerId", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByCustomerIdAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerId2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAccountsByCustomerId2(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerId2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByCustomerId2Async(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerIdbyAppID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAccountsByCustomerIdbyAppID(string customerId, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerIdbyAppID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByCustomerIdbyAppIDAsync(string customerId, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAccountsByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByMobileNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerAccountsByMobileNo(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByMobileNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByMobileNoAsync(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getProductByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getProductByCode(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getProductByCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getProductByCodeAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrencies", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrencyByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCurrencyByCode(string currencyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrencyByCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCurrencyByCodeAsync(string currencyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCompanies", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCompanyByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCompanyByCode(string companyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCompanyByCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCompanyByCodeAsync(string companyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCompanyByLocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCompanyByLocation(int locationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCompanyByLocation", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCompanyByLocationAsync(int locationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRegions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRegions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRegions", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRegionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSortCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSortCodes(string bankcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSortCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSortCodesAsync(string bankcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getStatement(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatement", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getStatementAsync(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatementByAppID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getStatementByAppID(string nuban, System.DateTime sdate, System.DateTime edate, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatementByAppID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getStatementByAppIDAsync(string nuban, System.DateTime sdate, System.DateTime edate, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBalances", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getBalances(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBalances", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBalancesAsync(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLastNTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getLastNTransaction(string nuban, int NoRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLastNTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getLastNTransactionAsync(string nuban, int NoRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getActiveLoans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getActiveLoans(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getActiveLoans", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getActiveLoansAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetIndivCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24ACPGetIndivCustomer(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetIndivCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetIndivCustomerAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24ACPGetCustomerAccount(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetCustomerAccountAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24ACPGetCustomerAddress(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerAddress", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetCustomerAddressAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerContact", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24ACPGetCustomerContact(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerContact", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetCustomerContactAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerPartys", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24ACPGetCustomerPartys(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerPartys", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetCustomerPartysAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetAllCustomerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24ACPGetAllCustomerInfo(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetAllCustomerInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetAllCustomerInfoAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetAccountDebitCredit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24CAMGetAccountDebitCredit(string acct, System.DateTime sDate, System.DateTime eDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetAccountDebitCredit", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24CAMGetAccountDebitCreditAsync(string acct, System.DateTime sDate, System.DateTime eDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetAccountFullInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetAccountFullInfo(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetAccountFullInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetAccountFullInfoAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCompanies", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCompanyByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetCompanyByCode(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCompanyByCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetCompanyByCodeAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetLastNTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetLastNTransaction(string nuban, int recordNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetLastNTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetLastNTransactionAsync(string nuban, int recordNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastNTransactionRtn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLastNTransactionRtn(string nuban, string recordNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastNTransactionRtn", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLastNTransactionRtnAsync(string nuban, string recordNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetCustomerAccountsByBVN(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetCustomerAccountsByBVNAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByCustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetCustomerAccountsByCustomerId(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByCustomerId", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetCustomerAccountsByCustomerIdAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetCustomerAccountsByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetCustomerAccountsByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByMobileNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetCustomerAccountsByMobileNo(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByMobileNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetCustomerAccountsByMobileNoAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCurrencyByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetCurrencyByCode(string currencyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCurrencyByCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetCurrencyByCodeAsync(string currencyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCurrencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24GetCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCurrencies", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24GetCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetCOTIncome", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet T24CAMGetCOTIncome(string acct, System.DateTime sDate, System.DateTime eDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetCOTIncome", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> T24CAMGetCOTIncomeAsync(string acct, System.DateTime sDate, System.DateTime eDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AccountCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AccountCreation(string customerid, string productcode, string currency, string branch, string PND, string dao, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AccountCreation", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AccountCreationAsync(string customerid, string productcode, string currency, string branch, string PND, string dao, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AmountLockwithoutDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AmountLockwithoutDate(string account, decimal amt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AmountLockwithoutDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AmountLockwithoutDateAsync(string account, decimal amt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopChequePayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string StopChequePayment(string account, string chequeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopChequePayment", ReplyAction="*")]
        System.Threading.Tasks.Task<string> StopChequePaymentAsync(string account, string chequeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatialUnLockAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PatialUnLockAmount(string id, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatialUnLockAmount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PatialUnLockAmountAsync(string id, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceStandingOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PlaceStandingOrder(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceStandingOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PlaceStandingOrderAsync(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IndvCustomerCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet IndvCustomerCreation(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IndvCustomerCreation", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> IndvCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StaffAccountCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet StaffAccountCreation(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StaffAccountCreation", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> StaffAccountCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AsscCustomerCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AsscCustomerCreation(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AsscCustomerCreation", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AsscCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UserLimit(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> UserLimitAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveUserID2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RetrieveUserID2(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveUserID2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RetrieveUserID2Async(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveUserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RetrieveUserID(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveUserID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RetrieveUserIDAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetATMDetail(string stan, string retno, string authcode, string debitacct, string pan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetATMDetailAsync(string stan, string retno, string authcode, string debitacct, string pan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ATMPassUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ATMPassUpdate(string recid, string userid, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ATMPassUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ATMPassUpdateAsync(string recid, string userid, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ATMParameterUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ATMParameterUpdate(string recid, string userid, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ATMParameterUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ATMParameterUpdateAsync(string recid, string userid, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateDAO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidateDAO(string daocode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateDAO", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ValidateDAOAsync(string daocode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInternalAcctStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetInternalAcctStatement(string acct, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInternalAcctStatement", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetInternalAcctStatementAsync(string acct, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIntroducer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateIntroducer(string customer, string introducer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIntroducer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateIntroducerAsync(string customer, string introducer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMTxnDateRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetATMTxnDateRange(string debitaccount, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMTxnDateRange", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetATMTxnDateRangeAsync(string debitaccount, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAcctAltID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateAcctAltID(string AccountNo, string AltAccount, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAcctAltID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateAcctAltIDAsync(string AccountNo, string AltAccount, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountfromDByAccountNum2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountfromDByAccountNum2(string acctnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountfromDByAccountNum2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountfromDByAccountNum2Async(string acctnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountfromDByAccountNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountfromDByAccountNum(string acctnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountfromDByAccountNum", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountfromDByAccountNumAsync(string acctnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountInfoByRoutine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountInfoByRoutine(string acctnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountInfoByRoutine", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountInfoByRoutineAsync(string acctnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExistBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateExistBVN(string customerid, string Bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExistBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateExistBVNAsync(string customerid, string Bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatement1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getStatement1(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatement1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getStatement1Async(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceRestriction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PlaceRestriction(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceRestriction", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PlaceRestrictionAsync(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveRestriction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RemoveRestriction(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveRestriction", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RemoveRestrictionAsync(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOverdueReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOverdueReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOverdueReport", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetOverdueReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeriveInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeriveInternalAccount(string currency, string categoryCode, string sequency, string companyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeriveInternalAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeriveInternalAccountAsync(string currency, string categoryCode, string sequency, string companyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getInternalAccount(string companyCode, string currency, string categoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getInternalAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getInternalAccountAsync(string companyCode, string currency, string categoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendEmail(string destinationEmail, string sourceEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendEmailAsync(string destinationEmail, string sourceEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAcctInfoByNubanandPhone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAcctInfoByNubanandPhone(string nuban, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAcctInfoByNubanandPhone", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAcctInfoByNubanandPhoneAsync(string nuban, string mobile);
        
        // CODEGEN: Parameter 'sDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LockAmountWithReason", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CardTokenizationAPI.BankSoap.LockAmountWithReasonResponse LockAmountWithReason(CardTokenizationAPI.BankSoap.LockAmountWithReasonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LockAmountWithReason", ReplyAction="*")]
        System.Threading.Tasks.Task<CardTokenizationAPI.BankSoap.LockAmountWithReasonResponse> LockAmountWithReasonAsync(CardTokenizationAPI.BankSoap.LockAmountWithReasonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FormInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FormInternalAccount(string companycode, string currency, string ledcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FormInternalAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> FormInternalAccountAsync(string companycode, string currency, string ledcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchCustomerByBvn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchCustomerByBvn(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchCustomerByBvn", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchCustomerByBvnAsync(string bvn);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCustomer", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string customerid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string surname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string middlename;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string firstname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string sector;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string target;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string bvn;
        
        public UpdateCustomerRequest() {
        }
        
        public UpdateCustomerRequest(string customerid, string surname, string middlename, string firstname, string address, string sector, string target, string status, string bvn) {
            this.customerid = customerid;
            this.surname = surname;
            this.middlename = middlename;
            this.firstname = firstname;
            this.address = address;
            this.sector = sector;
            this.target = target;
            this.status = status;
            this.bvn = bvn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCustomerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateCustomerResult;
        
        public UpdateCustomerResponse() {
        }
        
        public UpdateCustomerResponse(string UpdateCustomerResult) {
            this.UpdateCustomerResult = UpdateCustomerResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Customer_Update", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Customer_UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string customerid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fullname1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fullname2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string shortName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string accountOfficer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string sector;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string industry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string target;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string customerStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public string residence;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string nationality;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string customerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> birthOrIncorporationDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public string mnemonic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public string street;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public string address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public string townCountry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public string postCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=19)]
        public string country;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=20)]
        public string phone1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=21)]
        public string sms1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=22)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=23)]
        public string officePhone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=24)]
        public string fax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=25)]
        public string stateResidence;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=26)]
        public string addressLandmark;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=27)]
        public string legalID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=28)]
        public string legalDocName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=29)]
        public string legalHolderName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=30)]
        public string legalIssuingAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=31)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> legalIssueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=32)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> legalExpDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=33)]
        public string legalCountryOfIssue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=34)]
        public string taxId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=35)]
        public string bvn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=36)]
        public string nin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=37)]
        public string scumlNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=38)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> customerSince;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=39)]
        public bool isPep;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=40)]
        public string pepDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=41)]
        public bool isIssueCheques;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=42)]
        public string nextOfKinName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=43)]
        public string nextOfKinEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=44)]
        public string nextOfKinPhone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=45)]
        public string rcNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=46)]
        public string placeOfRegistration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=47)]
        public string natureOfBusiness;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=48)]
        public string employerPhone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=49)]
        public string employerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=50)]
        public string employerAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=51)]
        public string jobTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=52)]
        public char gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=53)]
        public string title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=54)]
        public string customerRiskRating_calculated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=55)]
        public string customerRiskRating_Manual;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=56)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateOfBirth;
        
        public Customer_UpdateRequest() {
        }
        
        public Customer_UpdateRequest(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    System.Nullable<System.DateTime> birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    System.Nullable<System.DateTime> legalIssueDate, 
                    System.Nullable<System.DateTime> legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    System.Nullable<System.DateTime> customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    System.Nullable<System.DateTime> dateOfBirth) {
            this.customerid = customerid;
            this.fullname1 = fullname1;
            this.fullname2 = fullname2;
            this.shortName = shortName;
            this.accountOfficer = accountOfficer;
            this.sector = sector;
            this.industry = industry;
            this.target = target;
            this.customerStatus = customerStatus;
            this.residence = residence;
            this.nationality = nationality;
            this.customerType = customerType;
            this.language = language;
            this.birthOrIncorporationDate = birthOrIncorporationDate;
            this.mnemonic = mnemonic;
            this.street = street;
            this.address = address;
            this.townCountry = townCountry;
            this.postCode = postCode;
            this.country = country;
            this.phone1 = phone1;
            this.sms1 = sms1;
            this.email = email;
            this.officePhone = officePhone;
            this.fax = fax;
            this.stateResidence = stateResidence;
            this.addressLandmark = addressLandmark;
            this.legalID = legalID;
            this.legalDocName = legalDocName;
            this.legalHolderName = legalHolderName;
            this.legalIssuingAuth = legalIssuingAuth;
            this.legalIssueDate = legalIssueDate;
            this.legalExpDate = legalExpDate;
            this.legalCountryOfIssue = legalCountryOfIssue;
            this.taxId = taxId;
            this.bvn = bvn;
            this.nin = nin;
            this.scumlNum = scumlNum;
            this.customerSince = customerSince;
            this.isPep = isPep;
            this.pepDescription = pepDescription;
            this.isIssueCheques = isIssueCheques;
            this.nextOfKinName = nextOfKinName;
            this.nextOfKinEmail = nextOfKinEmail;
            this.nextOfKinPhone = nextOfKinPhone;
            this.rcNumber = rcNumber;
            this.placeOfRegistration = placeOfRegistration;
            this.natureOfBusiness = natureOfBusiness;
            this.employerPhone = employerPhone;
            this.employerName = employerName;
            this.employerAddress = employerAddress;
            this.jobTitle = jobTitle;
            this.gender = gender;
            this.title = title;
            this.customerRiskRating_calculated = customerRiskRating_calculated;
            this.customerRiskRating_Manual = customerRiskRating_Manual;
            this.dateOfBirth = dateOfBirth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Customer_UpdateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Customer_UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Customer_UpdateResult;
        
        public Customer_UpdateResponse() {
        }
        
        public Customer_UpdateResponse(string Customer_UpdateResult) {
            this.Customer_UpdateResult = Customer_UpdateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LockAmountWithReason", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LockAmountWithReasonRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string acct;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> sDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> eDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal amt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string reasonForLocking;
        
        public LockAmountWithReasonRequest() {
        }
        
        public LockAmountWithReasonRequest(string acct, System.Nullable<System.DateTime> sDate, System.Nullable<System.DateTime> eDate, decimal amt, string reasonForLocking) {
            this.acct = acct;
            this.sDate = sDate;
            this.eDate = eDate;
            this.amt = amt;
            this.reasonForLocking = reasonForLocking;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LockAmountWithReasonResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LockAmountWithReasonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string LockAmountWithReasonResult;
        
        public LockAmountWithReasonResponse() {
        }
        
        public LockAmountWithReasonResponse(string LockAmountWithReasonResult) {
            this.LockAmountWithReasonResult = LockAmountWithReasonResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface banksSoapChannel : CardTokenizationAPI.BankSoap.banksSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class banksSoapClient : System.ServiceModel.ClientBase<CardTokenizationAPI.BankSoap.banksSoap>, CardTokenizationAPI.BankSoap.banksSoap {
        
        public banksSoapClient() {
        }
        
        public banksSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public banksSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public banksSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public banksSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet SearchCustomerByMobilePhone(string mobilePhone) {
            return base.Channel.SearchCustomerByMobilePhone(mobilePhone);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchCustomerByMobilePhoneAsync(string mobilePhone) {
            return base.Channel.SearchCustomerByMobilePhoneAsync(mobilePhone);
        }
        
        public System.Data.DataSet SearchAccountsByCategoryCode(string retrievalValue, string categoryCode, string currency, bool isRetrievalValueACustomerId) {
            return base.Channel.SearchAccountsByCategoryCode(retrievalValue, categoryCode, currency, isRetrievalValueACustomerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchAccountsByCategoryCodeAsync(string retrievalValue, string categoryCode, string currency, bool isRetrievalValueACustomerId) {
            return base.Channel.SearchAccountsByCategoryCodeAsync(retrievalValue, categoryCode, currency, isRetrievalValueACustomerId);
        }
        
        public string UpdateCustomerStatus(string customerid, string customerstatus) {
            return base.Channel.UpdateCustomerStatus(customerid, customerstatus);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCustomerStatusAsync(string customerid, string customerstatus) {
            return base.Channel.UpdateCustomerStatusAsync(customerid, customerstatus);
        }
        
        public System.Data.DataSet getCustomerAccountsByBVN(string bvn) {
            return base.Channel.getCustomerAccountsByBVN(bvn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByBVNAsync(string bvn) {
            return base.Channel.getCustomerAccountsByBVNAsync(bvn);
        }
        
        public System.Data.DataSet getCustomerAccountsByBVN_New(string bvn) {
            return base.Channel.getCustomerAccountsByBVN_New(bvn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByBVN_NewAsync(string bvn) {
            return base.Channel.getCustomerAccountsByBVN_NewAsync(bvn);
        }
        
        public System.Data.DataSet getCustomerAccountsByMobileNo2(string mobileNo) {
            return base.Channel.getCustomerAccountsByMobileNo2(mobileNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByMobileNo2Async(string mobileNo) {
            return base.Channel.getCustomerAccountsByMobileNo2Async(mobileNo);
        }
        
        public System.Data.DataSet getLastNTransactionRoutine(string nuban, int NoRecord) {
            return base.Channel.getLastNTransactionRoutine(nuban, NoRecord);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getLastNTransactionRoutineAsync(string nuban, int NoRecord) {
            return base.Channel.getLastNTransactionRoutineAsync(nuban, NoRecord);
        }
        
        public System.Data.DataSet T24CAMGetAccountDetails(string nuban) {
            return base.Channel.T24CAMGetAccountDetails(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24CAMGetAccountDetailsAsync(string nuban) {
            return base.Channel.T24CAMGetAccountDetailsAsync(nuban);
        }
        
        public System.Data.DataSet T24CAMGetTransactionHistory(string nuban) {
            return base.Channel.T24CAMGetTransactionHistory(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24CAMGetTransactionHistoryAsync(string nuban) {
            return base.Channel.T24CAMGetTransactionHistoryAsync(nuban);
        }
        
        public string AmountLockwithoutDateNarration(string account, decimal amt, string narration) {
            return base.Channel.AmountLockwithoutDateNarration(account, amt, narration);
        }
        
        public System.Threading.Tasks.Task<string> AmountLockwithoutDateNarrationAsync(string account, decimal amt, string narration) {
            return base.Channel.AmountLockwithoutDateNarrationAsync(account, amt, narration);
        }
        
        public string PatialUnLockAmountWithRemark(string id, string amount, string remark) {
            return base.Channel.PatialUnLockAmountWithRemark(id, amount, remark);
        }
        
        public System.Threading.Tasks.Task<string> PatialUnLockAmountWithRemarkAsync(string id, string amount, string remark) {
            return base.Channel.PatialUnLockAmountWithRemarkAsync(id, amount, remark);
        }
        
        public string PlaceStandingOrderWithEnddateAndRemarks(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency, string enddate, string paymentDetails) {
            return base.Channel.PlaceStandingOrderWithEnddateAndRemarks(originatingaccount, beneficiaryaccount, amount, startdate, frequency, enddate, paymentDetails);
        }
        
        public System.Threading.Tasks.Task<string> PlaceStandingOrderWithEnddateAndRemarksAsync(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency, string enddate, string paymentDetails) {
            return base.Channel.PlaceStandingOrderWithEnddateAndRemarksAsync(originatingaccount, beneficiaryaccount, amount, startdate, frequency, enddate, paymentDetails);
        }
        
        public System.Data.DataSet CorpCustomerCreation(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state) {
            return base.Channel.CorpCustomerCreation(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, rcNumber, Incorporationpdate, sms, email, tin, state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CorpCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state) {
            return base.Channel.CorpCustomerCreationAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, rcNumber, Incorporationpdate, sms, email, tin, state);
        }
        
        public string PlaceRestrictionDeposits(string nuban, string restcode, string branch) {
            return base.Channel.PlaceRestrictionDeposits(nuban, restcode, branch);
        }
        
        public System.Threading.Tasks.Task<string> PlaceRestrictionDepositsAsync(string nuban, string restcode, string branch) {
            return base.Channel.PlaceRestrictionDepositsAsync(nuban, restcode, branch);
        }
        
        public string RemoveRestrictionDeposits(string nuban, string restcode, string branch) {
            return base.Channel.RemoveRestrictionDeposits(nuban, restcode, branch);
        }
        
        public System.Threading.Tasks.Task<string> RemoveRestrictionDepositsAsync(string nuban, string restcode, string branch) {
            return base.Channel.RemoveRestrictionDepositsAsync(nuban, restcode, branch);
        }
        
        public System.Data.DataSet GetATMTrxnDetailByID(string transactionid) {
            return base.Channel.GetATMTrxnDetailByID(transactionid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetATMTrxnDetailByIDAsync(string transactionid) {
            return base.Channel.GetATMTrxnDetailByIDAsync(transactionid);
        }
        
        public System.Data.DataSet GetFundsTransferDetails(string ftref, bool historysearch) {
            return base.Channel.GetFundsTransferDetails(ftref, historysearch);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetFundsTransferDetailsAsync(string ftref, bool historysearch) {
            return base.Channel.GetFundsTransferDetailsAsync(ftref, historysearch);
        }
        
        public string GetProductBalanceToday(string categoryCode) {
            return base.Channel.GetProductBalanceToday(categoryCode);
        }
        
        public System.Threading.Tasks.Task<string> GetProductBalanceTodayAsync(string categoryCode) {
            return base.Channel.GetProductBalanceTodayAsync(categoryCode);
        }
        
        public decimal GetPlCategoryBalanceForToday(string plCategoryCode) {
            return base.Channel.GetPlCategoryBalanceForToday(plCategoryCode);
        }
        
        public System.Threading.Tasks.Task<decimal> GetPlCategoryBalanceForTodayAsync(string plCategoryCode) {
            return base.Channel.GetPlCategoryBalanceForTodayAsync(plCategoryCode);
        }
        
        public System.Data.DataSet getLockedEventsHistory(string ID) {
            return base.Channel.getLockedEventsHistory(ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getLockedEventsHistoryAsync(string ID) {
            return base.Channel.getLockedEventsHistoryAsync(ID);
        }
        
        public System.Data.DataSet GetLockedEvents(string atUniqueId) {
            return base.Channel.GetLockedEvents(atUniqueId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLockedEventsAsync(string atUniqueId) {
            return base.Channel.GetLockedEventsAsync(atUniqueId);
        }
        
        public System.Data.DataSet getLockedEventsLive(string ID) {
            return base.Channel.getLockedEventsLive(ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getLockedEventsLiveAsync(string ID) {
            return base.Channel.getLockedEventsLiveAsync(ID);
        }
        
        public string UpdateAccountTitle(string acctno, string acctname, string branchcode) {
            return base.Channel.UpdateAccountTitle(acctno, acctname, branchcode);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAccountTitleAsync(string acctno, string acctname, string branchcode) {
            return base.Channel.UpdateAccountTitleAsync(acctno, acctname, branchcode);
        }
        
        public string UpdateDAOOfficer(string acctno, string dao, string branchcode) {
            return base.Channel.UpdateDAOOfficer(acctno, dao, branchcode);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDAOOfficerAsync(string acctno, string dao, string branchcode) {
            return base.Channel.UpdateDAOOfficerAsync(acctno, dao, branchcode);
        }
        
        public System.Data.DataSet GetKYCCRNumber(string cusnum) {
            return base.Channel.GetKYCCRNumber(cusnum);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetKYCCRNumberAsync(string cusnum) {
            return base.Channel.GetKYCCRNumberAsync(cusnum);
        }
        
        public System.Data.DataSet GetKYCDetails(string CRnumber) {
            return base.Channel.GetKYCDetails(CRnumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetKYCDetailsAsync(string CRnumber) {
            return base.Channel.GetKYCDetailsAsync(CRnumber);
        }
        
        public string updateCustomer(string updateFormat) {
            return base.Channel.updateCustomer(updateFormat);
        }
        
        public System.Threading.Tasks.Task<string> updateCustomerAsync(string updateFormat) {
            return base.Channel.updateCustomerAsync(updateFormat);
        }
        
        public string nipInwardCheck(string accountNumber, string amount) {
            return base.Channel.nipInwardCheck(accountNumber, amount);
        }
        
        public System.Threading.Tasks.Task<string> nipInwardCheckAsync(string accountNumber, string amount) {
            return base.Channel.nipInwardCheckAsync(accountNumber, amount);
        }
        
        public string[] getEbContractBalancesBalance(string acctNum, string oracleConnection) {
            return base.Channel.getEbContractBalancesBalance(acctNum, oracleConnection);
        }
        
        public System.Threading.Tasks.Task<string[]> getEbContractBalancesBalanceAsync(string acctNum, string oracleConnection) {
            return base.Channel.getEbContractBalancesBalanceAsync(acctNum, oracleConnection);
        }
        
        public string CreateDAO(string DEPT_ACCT_OFF_CODE, string AREA, string NAME, string DELIVERY_POINT, string DEPT_LEVEL, string DEPT_PARENT, string STAFF_ID, string STF_EFF_DATE, string DEPARTMENT, string STATUS) {
            return base.Channel.CreateDAO(DEPT_ACCT_OFF_CODE, AREA, NAME, DELIVERY_POINT, DEPT_LEVEL, DEPT_PARENT, STAFF_ID, STF_EFF_DATE, DEPARTMENT, STATUS);
        }
        
        public System.Threading.Tasks.Task<string> CreateDAOAsync(string DEPT_ACCT_OFF_CODE, string AREA, string NAME, string DELIVERY_POINT, string DEPT_LEVEL, string DEPT_PARENT, string STAFF_ID, string STF_EFF_DATE, string DEPARTMENT, string STATUS) {
            return base.Channel.CreateDAOAsync(DEPT_ACCT_OFF_CODE, AREA, NAME, DELIVERY_POINT, DEPT_LEVEL, DEPT_PARENT, STAFF_ID, STF_EFF_DATE, DEPARTMENT, STATUS);
        }
        
        public string MapDaoToAccount(string acctnum, int daocode) {
            return base.Channel.MapDaoToAccount(acctnum, daocode);
        }
        
        public System.Threading.Tasks.Task<string> MapDaoToAccountAsync(string acctnum, int daocode) {
            return base.Channel.MapDaoToAccountAsync(acctnum, daocode);
        }
        
        public System.Data.DataSet GetDaoInfoForCustomer(string customerid, int searchLevel) {
            return base.Channel.GetDaoInfoForCustomer(customerid, searchLevel);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDaoInfoForCustomerAsync(string customerid, int searchLevel) {
            return base.Channel.GetDaoInfoForCustomerAsync(customerid, searchLevel);
        }
        
        public System.Data.DataSet CreatesStaffCustomer(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename) {
            return base.Channel.CreatesStaffCustomer(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dob, sms, title, email, middlename);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreatesStaffCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename) {
            return base.Channel.CreatesStaffCustomerAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dob, sms, title, email, middlename);
        }
        
        public System.Data.DataSet CreateIndividualCustomer(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state) {
            return base.Channel.CreateIndividualCustomer(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dob, sms, title, email, middlename, state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateIndividualCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state) {
            return base.Channel.CreateIndividualCustomerAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dob, sms, title, email, middlename, state);
        }
        
        public System.Data.DataSet CreateCorporateCustomer2(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    string Incorpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string stateresidence) {
            return base.Channel.CreateCorporateCustomer2(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, rcNumber, Incorpdate, sms, email, tin, state, place, nature, stateresidence);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateCorporateCustomer2Async(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    string Incorpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string stateresidence) {
            return base.Channel.CreateCorporateCustomer2Async(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, rcNumber, Incorpdate, sms, email, tin, state, place, nature, stateresidence);
        }
        
        public System.Data.DataSet CreateAssociationCustomer(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string Incorpdate, 
                    string sms, 
                    string email) {
            return base.Channel.CreateAssociationCustomer(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, Incorpdate, sms, email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateAssociationCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string Incorpdate, 
                    string sms, 
                    string email) {
            return base.Channel.CreateAssociationCustomerAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, Incorpdate, sms, email);
        }
        
        public System.Data.DataSet CreateAccount(string customerid, string productcode, string currency, string dt, string branch, string PND, string dao, string acctName) {
            return base.Channel.CreateAccount(customerid, productcode, currency, dt, branch, PND, dao, acctName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateAccountAsync(string customerid, string productcode, string currency, string dt, string branch, string PND, string dao, string acctName) {
            return base.Channel.CreateAccountAsync(customerid, productcode, currency, dt, branch, PND, dao, acctName);
        }
        
        public System.Data.DataSet GetBvn(string bvn) {
            return base.Channel.GetBvn(bvn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBvnAsync(string bvn) {
            return base.Channel.GetBvnAsync(bvn);
        }
        
        public string Concession(string acctnumber, string Rate, string covenant) {
            return base.Channel.Concession(acctnumber, Rate, covenant);
        }
        
        public System.Threading.Tasks.Task<string> ConcessionAsync(string acctnumber, string Rate, string covenant) {
            return base.Channel.ConcessionAsync(acctnumber, Rate, covenant);
        }
        
        public bool PerformPostingRestrictionOperation(string acctnum, string bracode, string curcode, int restrictionCode, string action) {
            return base.Channel.PerformPostingRestrictionOperation(acctnum, bracode, curcode, restrictionCode, action);
        }
        
        public System.Threading.Tasks.Task<bool> PerformPostingRestrictionOperationAsync(string acctnum, string bracode, string curcode, int restrictionCode, string action) {
            return base.Channel.PerformPostingRestrictionOperationAsync(acctnum, bracode, curcode, restrictionCode, action);
        }
        
        public string CreateInternalAcct(string customerid, string categorycode, string currency, System.DateTime dt, string branch, string dao, string shorttitle) {
            return base.Channel.CreateInternalAcct(customerid, categorycode, currency, dt, branch, dao, shorttitle);
        }
        
        public System.Threading.Tasks.Task<string> CreateInternalAcctAsync(string customerid, string categorycode, string currency, System.DateTime dt, string branch, string dao, string shorttitle) {
            return base.Channel.CreateInternalAcctAsync(customerid, categorycode, currency, dt, branch, dao, shorttitle);
        }
        
        public string getRelationshipManagerDetails(string daoCode) {
            return base.Channel.getRelationshipManagerDetails(daoCode);
        }
        
        public System.Threading.Tasks.Task<string> getRelationshipManagerDetailsAsync(string daoCode) {
            return base.Channel.getRelationshipManagerDetailsAsync(daoCode);
        }
        
        public string generateTillAccount(string tellerId, string branchCode, string currencyCode) {
            return base.Channel.generateTillAccount(tellerId, branchCode, currencyCode);
        }
        
        public System.Threading.Tasks.Task<string> generateTillAccountAsync(string tellerId, string branchCode, string currencyCode) {
            return base.Channel.generateTillAccountAsync(tellerId, branchCode, currencyCode);
        }
        
        public System.Data.DataSet GetCustomerDetails(string customerID) {
            return base.Channel.GetCustomerDetails(customerID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDetailsAsync(string customerID) {
            return base.Channel.GetCustomerDetailsAsync(customerID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CardTokenizationAPI.BankSoap.UpdateCustomerResponse CardTokenizationAPI.BankSoap.banksSoap.UpdateCustomer1(CardTokenizationAPI.BankSoap.UpdateCustomerRequest request) {
            return base.Channel.UpdateCustomer1(request);
        }
        
        public string UpdateCustomer1(string customerid, string surname, string middlename, string firstname, string address, string sector, string target, string status, string bvn) {
            CardTokenizationAPI.BankSoap.UpdateCustomerRequest inValue = new CardTokenizationAPI.BankSoap.UpdateCustomerRequest();
            inValue.customerid = customerid;
            inValue.surname = surname;
            inValue.middlename = middlename;
            inValue.firstname = firstname;
            inValue.address = address;
            inValue.sector = sector;
            inValue.target = target;
            inValue.status = status;
            inValue.bvn = bvn;
            CardTokenizationAPI.BankSoap.UpdateCustomerResponse retVal = ((CardTokenizationAPI.BankSoap.banksSoap)(this)).UpdateCustomer1(inValue);
            return retVal.UpdateCustomerResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CardTokenizationAPI.BankSoap.UpdateCustomerResponse> CardTokenizationAPI.BankSoap.banksSoap.UpdateCustomer1Async(CardTokenizationAPI.BankSoap.UpdateCustomerRequest request) {
            return base.Channel.UpdateCustomer1Async(request);
        }
        
        public System.Threading.Tasks.Task<CardTokenizationAPI.BankSoap.UpdateCustomerResponse> UpdateCustomer1Async(string customerid, string surname, string middlename, string firstname, string address, string sector, string target, string status, string bvn) {
            CardTokenizationAPI.BankSoap.UpdateCustomerRequest inValue = new CardTokenizationAPI.BankSoap.UpdateCustomerRequest();
            inValue.customerid = customerid;
            inValue.surname = surname;
            inValue.middlename = middlename;
            inValue.firstname = firstname;
            inValue.address = address;
            inValue.sector = sector;
            inValue.target = target;
            inValue.status = status;
            inValue.bvn = bvn;
            return ((CardTokenizationAPI.BankSoap.banksSoap)(this)).UpdateCustomer1Async(inValue);
        }
        
        public string SaveCustomerMandateNoSignatory(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription) {
            return base.Channel.SaveCustomerMandateNoSignatory(customerid, uploadedFilename, signatoryClass, mandateDescription);
        }
        
        public System.Threading.Tasks.Task<string> SaveCustomerMandateNoSignatoryAsync(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription) {
            return base.Channel.SaveCustomerMandateNoSignatoryAsync(customerid, uploadedFilename, signatoryClass, mandateDescription);
        }
        
        public string SaveCustomerMandate(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname) {
            return base.Channel.SaveCustomerMandate(customerid, uploadedFilename, signatoryClass, mandateDescription, signatoryShortName, signatoryFullname);
        }
        
        public System.Threading.Tasks.Task<string> SaveCustomerMandateAsync(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname) {
            return base.Channel.SaveCustomerMandateAsync(customerid, uploadedFilename, signatoryClass, mandateDescription, signatoryShortName, signatoryFullname);
        }
        
        public string SaveCustomerMandate2(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname) {
            return base.Channel.SaveCustomerMandate2(customerid, uploadedFilename, signatoryClass, mandateDescription, signatoryShortName, signatoryFullname);
        }
        
        public System.Threading.Tasks.Task<string> SaveCustomerMandate2Async(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname) {
            return base.Channel.SaveCustomerMandate2Async(customerid, uploadedFilename, signatoryClass, mandateDescription, signatoryShortName, signatoryFullname);
        }
        
        public string Customer_Update_String(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    string birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    string legalIssueDate, 
                    string legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    string customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    string dateOfBirth) {
            return base.Channel.Customer_Update_String(customerid, fullname1, fullname2, shortName, accountOfficer, sector, industry, target, customerStatus, residence, nationality, customerType, language, birthOrIncorporationDate, mnemonic, street, address, townCountry, postCode, country, phone1, sms1, email, officePhone, fax, stateResidence, addressLandmark, legalID, legalDocName, legalHolderName, legalIssuingAuth, legalIssueDate, legalExpDate, legalCountryOfIssue, taxId, bvn, nin, scumlNum, customerSince, isPep, pepDescription, isIssueCheques, nextOfKinName, nextOfKinEmail, nextOfKinPhone, rcNumber, placeOfRegistration, natureOfBusiness, employerPhone, employerName, employerAddress, jobTitle, gender, title, customerRiskRating_calculated, customerRiskRating_Manual, dateOfBirth);
        }
        
        public System.Threading.Tasks.Task<string> Customer_Update_StringAsync(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    string birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    string legalIssueDate, 
                    string legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    string customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    string dateOfBirth) {
            return base.Channel.Customer_Update_StringAsync(customerid, fullname1, fullname2, shortName, accountOfficer, sector, industry, target, customerStatus, residence, nationality, customerType, language, birthOrIncorporationDate, mnemonic, street, address, townCountry, postCode, country, phone1, sms1, email, officePhone, fax, stateResidence, addressLandmark, legalID, legalDocName, legalHolderName, legalIssuingAuth, legalIssueDate, legalExpDate, legalCountryOfIssue, taxId, bvn, nin, scumlNum, customerSince, isPep, pepDescription, isIssueCheques, nextOfKinName, nextOfKinEmail, nextOfKinPhone, rcNumber, placeOfRegistration, natureOfBusiness, employerPhone, employerName, employerAddress, jobTitle, gender, title, customerRiskRating_calculated, customerRiskRating_Manual, dateOfBirth);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CardTokenizationAPI.BankSoap.Customer_UpdateResponse CardTokenizationAPI.BankSoap.banksSoap.Customer_Update(CardTokenizationAPI.BankSoap.Customer_UpdateRequest request) {
            return base.Channel.Customer_Update(request);
        }
        
        public string Customer_Update(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    System.Nullable<System.DateTime> birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    System.Nullable<System.DateTime> legalIssueDate, 
                    System.Nullable<System.DateTime> legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    System.Nullable<System.DateTime> customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    System.Nullable<System.DateTime> dateOfBirth) {
            CardTokenizationAPI.BankSoap.Customer_UpdateRequest inValue = new CardTokenizationAPI.BankSoap.Customer_UpdateRequest();
            inValue.customerid = customerid;
            inValue.fullname1 = fullname1;
            inValue.fullname2 = fullname2;
            inValue.shortName = shortName;
            inValue.accountOfficer = accountOfficer;
            inValue.sector = sector;
            inValue.industry = industry;
            inValue.target = target;
            inValue.customerStatus = customerStatus;
            inValue.residence = residence;
            inValue.nationality = nationality;
            inValue.customerType = customerType;
            inValue.language = language;
            inValue.birthOrIncorporationDate = birthOrIncorporationDate;
            inValue.mnemonic = mnemonic;
            inValue.street = street;
            inValue.address = address;
            inValue.townCountry = townCountry;
            inValue.postCode = postCode;
            inValue.country = country;
            inValue.phone1 = phone1;
            inValue.sms1 = sms1;
            inValue.email = email;
            inValue.officePhone = officePhone;
            inValue.fax = fax;
            inValue.stateResidence = stateResidence;
            inValue.addressLandmark = addressLandmark;
            inValue.legalID = legalID;
            inValue.legalDocName = legalDocName;
            inValue.legalHolderName = legalHolderName;
            inValue.legalIssuingAuth = legalIssuingAuth;
            inValue.legalIssueDate = legalIssueDate;
            inValue.legalExpDate = legalExpDate;
            inValue.legalCountryOfIssue = legalCountryOfIssue;
            inValue.taxId = taxId;
            inValue.bvn = bvn;
            inValue.nin = nin;
            inValue.scumlNum = scumlNum;
            inValue.customerSince = customerSince;
            inValue.isPep = isPep;
            inValue.pepDescription = pepDescription;
            inValue.isIssueCheques = isIssueCheques;
            inValue.nextOfKinName = nextOfKinName;
            inValue.nextOfKinEmail = nextOfKinEmail;
            inValue.nextOfKinPhone = nextOfKinPhone;
            inValue.rcNumber = rcNumber;
            inValue.placeOfRegistration = placeOfRegistration;
            inValue.natureOfBusiness = natureOfBusiness;
            inValue.employerPhone = employerPhone;
            inValue.employerName = employerName;
            inValue.employerAddress = employerAddress;
            inValue.jobTitle = jobTitle;
            inValue.gender = gender;
            inValue.title = title;
            inValue.customerRiskRating_calculated = customerRiskRating_calculated;
            inValue.customerRiskRating_Manual = customerRiskRating_Manual;
            inValue.dateOfBirth = dateOfBirth;
            CardTokenizationAPI.BankSoap.Customer_UpdateResponse retVal = ((CardTokenizationAPI.BankSoap.banksSoap)(this)).Customer_Update(inValue);
            return retVal.Customer_UpdateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CardTokenizationAPI.BankSoap.Customer_UpdateResponse> CardTokenizationAPI.BankSoap.banksSoap.Customer_UpdateAsync(CardTokenizationAPI.BankSoap.Customer_UpdateRequest request) {
            return base.Channel.Customer_UpdateAsync(request);
        }
        
        public System.Threading.Tasks.Task<CardTokenizationAPI.BankSoap.Customer_UpdateResponse> Customer_UpdateAsync(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    System.Nullable<System.DateTime> birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    System.Nullable<System.DateTime> legalIssueDate, 
                    System.Nullable<System.DateTime> legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    System.Nullable<System.DateTime> customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    System.Nullable<System.DateTime> dateOfBirth) {
            CardTokenizationAPI.BankSoap.Customer_UpdateRequest inValue = new CardTokenizationAPI.BankSoap.Customer_UpdateRequest();
            inValue.customerid = customerid;
            inValue.fullname1 = fullname1;
            inValue.fullname2 = fullname2;
            inValue.shortName = shortName;
            inValue.accountOfficer = accountOfficer;
            inValue.sector = sector;
            inValue.industry = industry;
            inValue.target = target;
            inValue.customerStatus = customerStatus;
            inValue.residence = residence;
            inValue.nationality = nationality;
            inValue.customerType = customerType;
            inValue.language = language;
            inValue.birthOrIncorporationDate = birthOrIncorporationDate;
            inValue.mnemonic = mnemonic;
            inValue.street = street;
            inValue.address = address;
            inValue.townCountry = townCountry;
            inValue.postCode = postCode;
            inValue.country = country;
            inValue.phone1 = phone1;
            inValue.sms1 = sms1;
            inValue.email = email;
            inValue.officePhone = officePhone;
            inValue.fax = fax;
            inValue.stateResidence = stateResidence;
            inValue.addressLandmark = addressLandmark;
            inValue.legalID = legalID;
            inValue.legalDocName = legalDocName;
            inValue.legalHolderName = legalHolderName;
            inValue.legalIssuingAuth = legalIssuingAuth;
            inValue.legalIssueDate = legalIssueDate;
            inValue.legalExpDate = legalExpDate;
            inValue.legalCountryOfIssue = legalCountryOfIssue;
            inValue.taxId = taxId;
            inValue.bvn = bvn;
            inValue.nin = nin;
            inValue.scumlNum = scumlNum;
            inValue.customerSince = customerSince;
            inValue.isPep = isPep;
            inValue.pepDescription = pepDescription;
            inValue.isIssueCheques = isIssueCheques;
            inValue.nextOfKinName = nextOfKinName;
            inValue.nextOfKinEmail = nextOfKinEmail;
            inValue.nextOfKinPhone = nextOfKinPhone;
            inValue.rcNumber = rcNumber;
            inValue.placeOfRegistration = placeOfRegistration;
            inValue.natureOfBusiness = natureOfBusiness;
            inValue.employerPhone = employerPhone;
            inValue.employerName = employerName;
            inValue.employerAddress = employerAddress;
            inValue.jobTitle = jobTitle;
            inValue.gender = gender;
            inValue.title = title;
            inValue.customerRiskRating_calculated = customerRiskRating_calculated;
            inValue.customerRiskRating_Manual = customerRiskRating_Manual;
            inValue.dateOfBirth = dateOfBirth;
            return ((CardTokenizationAPI.BankSoap.banksSoap)(this)).Customer_UpdateAsync(inValue);
        }
        
        public System.Data.DataSet getPresentedCheque(string chequeNumber, string accountNumber) {
            return base.Channel.getPresentedCheque(chequeNumber, accountNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getPresentedChequeAsync(string chequeNumber, string accountNumber) {
            return base.Channel.getPresentedChequeAsync(chequeNumber, accountNumber);
        }
        
        public System.Data.DataSet getStoppedCheque(string chequeNumber, string accountNumber) {
            return base.Channel.getStoppedCheque(chequeNumber, accountNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getStoppedChequeAsync(string chequeNumber, string accountNumber) {
            return base.Channel.getStoppedChequeAsync(chequeNumber, accountNumber);
        }
        
        public System.Data.DataSet getCustomerAllFields(string customerID) {
            return base.Channel.getCustomerAllFields(customerID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAllFieldsAsync(string customerID) {
            return base.Channel.getCustomerAllFieldsAsync(customerID);
        }
        
        public string SaveReferee(string customerID, string data) {
            return base.Channel.SaveReferee(customerID, data);
        }
        
        public System.Threading.Tasks.Task<string> SaveRefereeAsync(string customerID, string data) {
            return base.Channel.SaveRefereeAsync(customerID, data);
        }
        
        public string DoForexSpotDeal(
                    string counterPartyid, 
                    string dealDate_yyyyMMdd, 
                    string dealerDesk_def_00, 
                    string currencyBought, 
                    string currencySold, 
                    decimal spotRate, 
                    string dealMethod_def_RE, 
                    bool isStartOfDayMaturity, 
                    string dealerComment, 
                    string sendPayment_def_HOLD, 
                    decimal buyAmount, 
                    string valueDateBuy_yyyyMMdd, 
                    decimal sellAmount, 
                    string valueDateSell_yyyyMMdd, 
                    string sellSettlementAccount, 
                    string sellSettlementDate_yyyyMMdd, 
                    decimal sellSettlementAmount, 
                    string buySettlementAccount, 
                    string buySettlementDate_yyyyMMdd, 
                    decimal buySettlementAmount, 
                    string bankWhereAmountToBePaidAKACounterpartySSI, 
                    string bankToBankInfo) {
            return base.Channel.DoForexSpotDeal(counterPartyid, dealDate_yyyyMMdd, dealerDesk_def_00, currencyBought, currencySold, spotRate, dealMethod_def_RE, isStartOfDayMaturity, dealerComment, sendPayment_def_HOLD, buyAmount, valueDateBuy_yyyyMMdd, sellAmount, valueDateSell_yyyyMMdd, sellSettlementAccount, sellSettlementDate_yyyyMMdd, sellSettlementAmount, buySettlementAccount, buySettlementDate_yyyyMMdd, buySettlementAmount, bankWhereAmountToBePaidAKACounterpartySSI, bankToBankInfo);
        }
        
        public System.Threading.Tasks.Task<string> DoForexSpotDealAsync(
                    string counterPartyid, 
                    string dealDate_yyyyMMdd, 
                    string dealerDesk_def_00, 
                    string currencyBought, 
                    string currencySold, 
                    decimal spotRate, 
                    string dealMethod_def_RE, 
                    bool isStartOfDayMaturity, 
                    string dealerComment, 
                    string sendPayment_def_HOLD, 
                    decimal buyAmount, 
                    string valueDateBuy_yyyyMMdd, 
                    decimal sellAmount, 
                    string valueDateSell_yyyyMMdd, 
                    string sellSettlementAccount, 
                    string sellSettlementDate_yyyyMMdd, 
                    decimal sellSettlementAmount, 
                    string buySettlementAccount, 
                    string buySettlementDate_yyyyMMdd, 
                    decimal buySettlementAmount, 
                    string bankWhereAmountToBePaidAKACounterpartySSI, 
                    string bankToBankInfo) {
            return base.Channel.DoForexSpotDealAsync(counterPartyid, dealDate_yyyyMMdd, dealerDesk_def_00, currencyBought, currencySold, spotRate, dealMethod_def_RE, isStartOfDayMaturity, dealerComment, sendPayment_def_HOLD, buyAmount, valueDateBuy_yyyyMMdd, sellAmount, valueDateSell_yyyyMMdd, sellSettlementAccount, sellSettlementDate_yyyyMMdd, sellSettlementAmount, buySettlementAccount, buySettlementDate_yyyyMMdd, buySettlementAmount, bankWhereAmountToBePaidAKACounterpartySSI, bankToBankInfo);
        }
        
        public string Account_AddCo_Owner(string accountNumber, string acctBranch, string co_Owner_CustId, string co_Owner_Role, string action) {
            return base.Channel.Account_AddCo_Owner(accountNumber, acctBranch, co_Owner_CustId, co_Owner_Role, action);
        }
        
        public System.Threading.Tasks.Task<string> Account_AddCo_OwnerAsync(string accountNumber, string acctBranch, string co_Owner_CustId, string co_Owner_Role, string action) {
            return base.Channel.Account_AddCo_OwnerAsync(accountNumber, acctBranch, co_Owner_CustId, co_Owner_Role, action);
        }
        
        public string UpdateProductChange(System.DateTime effectiveDate, string newproductId, string accountnumber, string acctDomiciledBranch) {
            return base.Channel.UpdateProductChange(effectiveDate, newproductId, accountnumber, acctDomiciledBranch);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductChangeAsync(System.DateTime effectiveDate, string newproductId, string accountnumber, string acctDomiciledBranch) {
            return base.Channel.UpdateProductChangeAsync(effectiveDate, newproductId, accountnumber, acctDomiciledBranch);
        }
        
        public System.Data.DataSet GetHvtStatement(string accountnumber, System.DateTime startdate, System.DateTime endDate) {
            return base.Channel.GetHvtStatement(accountnumber, startdate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHvtStatementAsync(string accountnumber, System.DateTime startdate, System.DateTime endDate) {
            return base.Channel.GetHvtStatementAsync(accountnumber, startdate, endDate);
        }
        
        public string Customer_UpdateResidenceStatus(string customerid, string residencestatus) {
            return base.Channel.Customer_UpdateResidenceStatus(customerid, residencestatus);
        }
        
        public System.Threading.Tasks.Task<string> Customer_UpdateResidenceStatusAsync(string customerid, string residencestatus) {
            return base.Channel.Customer_UpdateResidenceStatusAsync(customerid, residencestatus);
        }
        
        public string UpdateDepositPayoutAccounts(string depositArrangementid, System.DateTime effectiveDate, string principalPayoutAcct, string interestPayoutAcct, string chargePayoutAcct) {
            return base.Channel.UpdateDepositPayoutAccounts(depositArrangementid, effectiveDate, principalPayoutAcct, interestPayoutAcct, chargePayoutAcct);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDepositPayoutAccountsAsync(string depositArrangementid, System.DateTime effectiveDate, string principalPayoutAcct, string interestPayoutAcct, string chargePayoutAcct) {
            return base.Channel.UpdateDepositPayoutAccountsAsync(depositArrangementid, effectiveDate, principalPayoutAcct, interestPayoutAcct, chargePayoutAcct);
        }
        
        public System.Data.DataSet GetInvestmentDetails(string investmentID) {
            return base.Channel.GetInvestmentDetails(investmentID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetInvestmentDetailsAsync(string investmentID) {
            return base.Channel.GetInvestmentDetailsAsync(investmentID);
        }
        
        public string SetFixedInterestRateOnLoan(string arrangementID, System.DateTime effectiveDate, decimal fixedRate, string propertyName) {
            return base.Channel.SetFixedInterestRateOnLoan(arrangementID, effectiveDate, fixedRate, propertyName);
        }
        
        public System.Threading.Tasks.Task<string> SetFixedInterestRateOnLoanAsync(string arrangementID, System.DateTime effectiveDate, decimal fixedRate, string propertyName) {
            return base.Channel.SetFixedInterestRateOnLoanAsync(arrangementID, effectiveDate, fixedRate, propertyName);
        }
        
        public string ChangeFloatingKeyInterestRateOnLoan(string arrangementID, System.DateTime effectiveDate, int floatingKey, decimal marginRate, bool isIncreaseAboveKeyOrBelowKey, string propertyName) {
            return base.Channel.ChangeFloatingKeyInterestRateOnLoan(arrangementID, effectiveDate, floatingKey, marginRate, isIncreaseAboveKeyOrBelowKey, propertyName);
        }
        
        public System.Threading.Tasks.Task<string> ChangeFloatingKeyInterestRateOnLoanAsync(string arrangementID, System.DateTime effectiveDate, int floatingKey, decimal marginRate, bool isIncreaseAboveKeyOrBelowKey, string propertyName) {
            return base.Channel.ChangeFloatingKeyInterestRateOnLoanAsync(arrangementID, effectiveDate, floatingKey, marginRate, isIncreaseAboveKeyOrBelowKey, propertyName);
        }
        
        public System.Data.DataSet GetAuthorizedMt202(string branch, string t24UserId) {
            return base.Channel.GetAuthorizedMt202(branch, t24UserId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAuthorizedMt202Async(string branch, string t24UserId) {
            return base.Channel.GetAuthorizedMt202Async(branch, t24UserId);
        }
        
        public System.Data.DataSet GetUnauthorizedMt202() {
            return base.Channel.GetUnauthorizedMt202();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUnauthorizedMt202Async() {
            return base.Channel.GetUnauthorizedMt202Async();
        }
        
        public System.Data.DataSet GetHvtAccountBalance(string accountnumber) {
            return base.Channel.GetHvtAccountBalance(accountnumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHvtAccountBalanceAsync(string accountnumber) {
            return base.Channel.GetHvtAccountBalanceAsync(accountnumber);
        }
        
        public string CloseAccount(string closeThisAccount, string moveBalanceToThisAccount, System.DateTime effectiveBankingDate) {
            return base.Channel.CloseAccount(closeThisAccount, moveBalanceToThisAccount, effectiveBankingDate);
        }
        
        public System.Threading.Tasks.Task<string> CloseAccountAsync(string closeThisAccount, string moveBalanceToThisAccount, System.DateTime effectiveBankingDate) {
            return base.Channel.CloseAccountAsync(closeThisAccount, moveBalanceToThisAccount, effectiveBankingDate);
        }
        
        public string PutRestrictionForInternalAccount(string acctno, string restcode, string branchcode) {
            return base.Channel.PutRestrictionForInternalAccount(acctno, restcode, branchcode);
        }
        
        public System.Threading.Tasks.Task<string> PutRestrictionForInternalAccountAsync(string acctno, string restcode, string branchcode) {
            return base.Channel.PutRestrictionForInternalAccountAsync(acctno, restcode, branchcode);
        }
        
        public string MnemonicForInternalAccount(string acctno, string restcode, string branchcode) {
            return base.Channel.MnemonicForInternalAccount(acctno, restcode, branchcode);
        }
        
        public System.Threading.Tasks.Task<string> MnemonicForInternalAccountAsync(string acctno, string restcode, string branchcode) {
            return base.Channel.MnemonicForInternalAccountAsync(acctno, restcode, branchcode);
        }
        
        public int T24SingleTxnRequeryInward(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24SingleTxnRequeryInward(transaction_ref, credit_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<int> T24SingleTxnRequeryInwardAsync(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24SingleTxnRequeryInwardAsync(transaction_ref, credit_ACCOUNT, amount, value_date);
        }
        
        public string T24SingleTxnRequeryInwardRef(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24SingleTxnRequeryInwardRef(transaction_ref, credit_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<string> T24SingleTxnRequeryInwardRefAsync(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24SingleTxnRequeryInwardRefAsync(transaction_ref, credit_ACCOUNT, amount, value_date);
        }
        
        public int T24SingleTxnRequeryOutward(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24SingleTxnRequeryOutward(transaction_ref, DEBIT_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<int> T24SingleTxnRequeryOutwardAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24SingleTxnRequeryOutwardAsync(transaction_ref, DEBIT_ACCOUNT, amount, value_date);
        }
        
        public int T24NIPOUTWARDTxnRequery(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24NIPOUTWARDTxnRequery(transaction_ref, DEBIT_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<int> T24NIPOUTWARDTxnRequeryAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24NIPOUTWARDTxnRequeryAsync(transaction_ref, DEBIT_ACCOUNT, amount, value_date);
        }
        
        public string T24NIPOUTWARDTxnRequeryRef(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24NIPOUTWARDTxnRequeryRef(transaction_ref, DEBIT_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<string> T24NIPOUTWARDTxnRequeryRefAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date) {
            return base.Channel.T24NIPOUTWARDTxnRequeryRefAsync(transaction_ref, DEBIT_ACCOUNT, amount, value_date);
        }
        
        public string UnblockUser(string userid) {
            return base.Channel.UnblockUser(userid);
        }
        
        public System.Threading.Tasks.Task<string> UnblockUserAsync(string userid) {
            return base.Channel.UnblockUserAsync(userid);
        }
        
        public string getT24UserID(string tell_ID) {
            return base.Channel.getT24UserID(tell_ID);
        }
        
        public System.Threading.Tasks.Task<string> getT24UserIDAsync(string tell_ID) {
            return base.Channel.getT24UserIDAsync(tell_ID);
        }
        
        public string getT24UserID2(string signonname) {
            return base.Channel.getT24UserID2(signonname);
        }
        
        public System.Threading.Tasks.Task<string> getT24UserID2Async(string signonname) {
            return base.Channel.getT24UserID2Async(signonname);
        }
        
        public bool IsHoliday(string sdate) {
            return base.Channel.IsHoliday(sdate);
        }
        
        public System.Threading.Tasks.Task<bool> IsHolidayAsync(string sdate) {
            return base.Channel.IsHolidayAsync(sdate);
        }
        
        public string getBankTellerID(string userid) {
            return base.Channel.getBankTellerID(userid);
        }
        
        public System.Threading.Tasks.Task<string> getBankTellerIDAsync(string userid) {
            return base.Channel.getBankTellerIDAsync(userid);
        }
        
        public System.Data.DataSet MandateRetrieval(string nuban) {
            return base.Channel.MandateRetrieval(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MandateRetrievalAsync(string nuban) {
            return base.Channel.MandateRetrievalAsync(nuban);
        }
        
        public string LockAmount(string accountNo, System.DateTime sDate, System.DateTime eDate, decimal amount) {
            return base.Channel.LockAmount(accountNo, sDate, eDate, amount);
        }
        
        public System.Threading.Tasks.Task<string> LockAmountAsync(string accountNo, System.DateTime sDate, System.DateTime eDate, decimal amount) {
            return base.Channel.LockAmountAsync(accountNo, sDate, eDate, amount);
        }
        
        public string UnLockAmount(string lockId) {
            return base.Channel.UnLockAmount(lockId);
        }
        
        public System.Threading.Tasks.Task<string> UnLockAmountAsync(string lockId) {
            return base.Channel.UnLockAmountAsync(lockId);
        }
        
        public string BlockAccount(string accountNumber) {
            return base.Channel.BlockAccount(accountNumber);
        }
        
        public System.Threading.Tasks.Task<string> BlockAccountAsync(string accountNumber) {
            return base.Channel.BlockAccountAsync(accountNumber);
        }
        
        public string UnBlockAccount(string accountNumber) {
            return base.Channel.UnBlockAccount(accountNumber);
        }
        
        public System.Threading.Tasks.Task<string> UnBlockAccountAsync(string accountNumber) {
            return base.Channel.UnBlockAccountAsync(accountNumber);
        }
        
        public string CustomerPortfolio(string customerId) {
            return base.Channel.CustomerPortfolio(customerId);
        }
        
        public System.Threading.Tasks.Task<string> CustomerPortfolioAsync(string customerId) {
            return base.Channel.CustomerPortfolioAsync(customerId);
        }
        
        public string GetStateOfBranch(string branchcode) {
            return base.Channel.GetStateOfBranch(branchcode);
        }
        
        public System.Threading.Tasks.Task<string> GetStateOfBranchAsync(string branchcode) {
            return base.Channel.GetStateOfBranchAsync(branchcode);
        }
        
        public System.Data.DataSet getCategory(string categorycode) {
            return base.Channel.getCategory(categorycode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCategoryAsync(string categorycode) {
            return base.Channel.getCategoryAsync(categorycode);
        }
        
        public System.Data.DataSet getTransactionReQuery(string accountNo, System.DateTime transdate, string tid) {
            return base.Channel.getTransactionReQuery(accountNo, transdate, tid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTransactionReQueryAsync(string accountNo, System.DateTime transdate, string tid) {
            return base.Channel.getTransactionReQueryAsync(accountNo, transdate, tid);
        }
        
        public System.Data.DataSet getTransactionReQueryforNibbs(string tid) {
            return base.Channel.getTransactionReQueryforNibbs(tid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTransactionReQueryforNibbsAsync(string tid) {
            return base.Channel.getTransactionReQueryforNibbsAsync(tid);
        }
        
        public System.Data.DataSet getTransactionReQueryByRef(string accountNo, System.DateTime transdate, string refId) {
            return base.Channel.getTransactionReQueryByRef(accountNo, transdate, refId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTransactionReQueryByRefAsync(string accountNo, System.DateTime transdate, string refId) {
            return base.Channel.getTransactionReQueryByRefAsync(accountNo, transdate, refId);
        }
        
        public string UpdateBVN(string customrId, string bvn) {
            return base.Channel.UpdateBVN(customrId, bvn);
        }
        
        public System.Threading.Tasks.Task<string> UpdateBVNAsync(string customrId, string bvn) {
            return base.Channel.UpdateBVNAsync(customrId, bvn);
        }
        
        public string accountopeningforexistingcustomer(string customerid, string productcode, string currency, string branch) {
            return base.Channel.accountopeningforexistingcustomer(customerid, productcode, currency, branch);
        }
        
        public System.Threading.Tasks.Task<string> accountopeningforexistingcustomerAsync(string customerid, string productcode, string currency, string branch) {
            return base.Channel.accountopeningforexistingcustomerAsync(customerid, productcode, currency, branch);
        }
        
        public System.Data.DataSet GetIndustries() {
            return base.Channel.GetIndustries();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIndustriesAsync() {
            return base.Channel.GetIndustriesAsync();
        }
        
        public System.Data.DataSet GetSectors() {
            return base.Channel.GetSectors();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSectorsAsync() {
            return base.Channel.GetSectorsAsync();
        }
        
        public System.Data.DataSet GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public System.Data.DataSet GetStates() {
            return base.Channel.GetStates();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStatesAsync() {
            return base.Channel.GetStatesAsync();
        }
        
        public System.Data.DataSet GetTargets() {
            return base.Channel.GetTargets();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTargetsAsync() {
            return base.Channel.GetTargetsAsync();
        }
        
        public System.Data.DataSet GetCustomerStatusList() {
            return base.Channel.GetCustomerStatusList();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerStatusListAsync() {
            return base.Channel.GetCustomerStatusListAsync();
        }
        
        public System.Data.DataSet GetBranches() {
            return base.Channel.GetBranches();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesAsync() {
            return base.Channel.GetBranchesAsync();
        }
        
        public string GetOldBranchCode(string branchCode) {
            return base.Channel.GetOldBranchCode(branchCode);
        }
        
        public System.Threading.Tasks.Task<string> GetOldBranchCodeAsync(string branchCode) {
            return base.Channel.GetOldBranchCodeAsync(branchCode);
        }
        
        public System.Data.DataSet getBankDetailsBySortCode(string sortcode) {
            return base.Channel.getBankDetailsBySortCode(sortcode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBankDetailsBySortCodeAsync(string sortcode) {
            return base.Channel.getBankDetailsBySortCodeAsync(sortcode);
        }
        
        public System.Data.DataSet getBankDetail() {
            return base.Channel.getBankDetail();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBankDetailAsync() {
            return base.Channel.getBankDetailAsync();
        }
        
        public System.Data.DataSet getAllProduct() {
            return base.Channel.getAllProduct();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllProductAsync() {
            return base.Channel.getAllProductAsync();
        }
        
        public System.Data.DataSet getAccountByProduct(string productCode) {
            return base.Channel.getAccountByProduct(productCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAccountByProductAsync(string productCode) {
            return base.Channel.getAccountByProductAsync(productCode);
        }
        
        public string isSMSSubscriber(string customerId) {
            return base.Channel.isSMSSubscriber(customerId);
        }
        
        public System.Threading.Tasks.Task<string> isSMSSubscriberAsync(string customerId) {
            return base.Channel.isSMSSubscriberAsync(customerId);
        }
        
        public System.Data.DataSet getTellerLimit(string Tellerid, string branchcode) {
            return base.Channel.getTellerLimit(Tellerid, branchcode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTellerLimitAsync(string Tellerid, string branchcode) {
            return base.Channel.getTellerLimitAsync(Tellerid, branchcode);
        }
        
        public System.Data.DataSet getCustomerDeposit(string customerId) {
            return base.Channel.getCustomerDeposit(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerDepositAsync(string customerId) {
            return base.Channel.getCustomerDepositAsync(customerId);
        }
        
        public System.Data.DataSet GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
        
        public System.Data.DataSet getPaymentDetail(string nuban, System.DateTime date) {
            return base.Channel.getPaymentDetail(nuban, date);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getPaymentDetailAsync(string nuban, System.DateTime date) {
            return base.Channel.getPaymentDetailAsync(nuban, date);
        }
        
        public System.Data.DataSet getTransactionDetail(string nuban, System.DateTime date) {
            return base.Channel.getTransactionDetail(nuban, date);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTransactionDetailAsync(string nuban, System.DateTime date) {
            return base.Channel.getTransactionDetailAsync(nuban, date);
        }
        
        public System.Data.DataSet getTotalTransaction(string nuban) {
            return base.Channel.getTotalTransaction(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTotalTransactionAsync(string nuban) {
            return base.Channel.getTotalTransactionAsync(nuban);
        }
        
        public System.Data.DataSet checktAccountforRestriction(string nuban) {
            return base.Channel.checktAccountforRestriction(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> checktAccountforRestrictionAsync(string nuban) {
            return base.Channel.checktAccountforRestrictionAsync(nuban);
        }
        
        public System.Data.DataSet getTellerInfo(string tellerId, string branchCode) {
            return base.Channel.getTellerInfo(tellerId, branchCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTellerInfoAsync(string tellerId, string branchCode) {
            return base.Channel.getTellerInfoAsync(tellerId, branchCode);
        }
        
        public System.Data.DataSet getCheque(string nuban, string chequeNo) {
            return base.Channel.getCheque(nuban, chequeNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getChequeAsync(string nuban, string chequeNo) {
            return base.Channel.getChequeAsync(nuban, chequeNo);
        }
        
        public System.Data.DataSet getLoanSchedule(string arrangementId) {
            return base.Channel.getLoanSchedule(arrangementId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getLoanScheduleAsync(string arrangementId) {
            return base.Channel.getLoanScheduleAsync(arrangementId);
        }
        
        public System.Data.DataSet getLoanInfo(string arrangementId) {
            return base.Channel.getLoanInfo(arrangementId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getLoanInfoAsync(string arrangementId) {
            return base.Channel.getLoanInfoAsync(arrangementId);
        }
        
        public System.Data.DataSet getAccountFullInfo(string nuban) {
            return base.Channel.getAccountFullInfo(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAccountFullInfoAsync(string nuban) {
            return base.Channel.getAccountFullInfoAsync(nuban);
        }
        
        public System.Data.DataSet getAccountFullInfo_New(string nuban) {
            return base.Channel.getAccountFullInfo_New(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAccountFullInfo_NewAsync(string nuban) {
            return base.Channel.getAccountFullInfo_NewAsync(nuban);
        }
        
        public System.Data.DataSet getAccountFullInfoByAppID(string nuban, string appid) {
            return base.Channel.getAccountFullInfoByAppID(nuban, appid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAccountFullInfoByAppIDAsync(string nuban, string appid) {
            return base.Channel.getAccountFullInfoByAppIDAsync(nuban, appid);
        }
        
        public System.Data.DataSet getCustomrInfo(string customerId) {
            return base.Channel.getCustomrInfo(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomrInfoAsync(string customerId) {
            return base.Channel.getCustomrInfoAsync(customerId);
        }
        
        public System.Data.DataSet getCustomrInfoByAppID(string customerId, string appid) {
            return base.Channel.getCustomrInfoByAppID(customerId, appid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomrInfoByAppIDAsync(string customerId, string appid) {
            return base.Channel.getCustomrInfoByAppIDAsync(customerId, appid);
        }
        
        public System.Data.DataSet getIndivCustomer(string customerId) {
            return base.Channel.getIndivCustomer(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getIndivCustomerAsync(string customerId) {
            return base.Channel.getIndivCustomerAsync(customerId);
        }
        
        public System.Data.DataSet getCustomerAddress(string customerId) {
            return base.Channel.getCustomerAddress(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAddressAsync(string customerId) {
            return base.Channel.getCustomerAddressAsync(customerId);
        }
        
        public System.Data.DataSet getCustomerContacts(string customerId) {
            return base.Channel.getCustomerContacts(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerContactsAsync(string customerId) {
            return base.Channel.getCustomerContactsAsync(customerId);
        }
        
        public System.Data.DataSet getCustomerPartys(string customerId) {
            return base.Channel.getCustomerPartys(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerPartysAsync(string customerId) {
            return base.Channel.getCustomerPartysAsync(customerId);
        }
        
        public System.Data.DataSet getCustomerAccountsByCustomerId_New(string customerId) {
            return base.Channel.getCustomerAccountsByCustomerId_New(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByCustomerId_NewAsync(string customerId) {
            return base.Channel.getCustomerAccountsByCustomerId_NewAsync(customerId);
        }
        
        public System.Data.DataSet getCustomerAccountsByCustomerId(string customerId) {
            return base.Channel.getCustomerAccountsByCustomerId(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByCustomerIdAsync(string customerId) {
            return base.Channel.getCustomerAccountsByCustomerIdAsync(customerId);
        }
        
        public System.Data.DataSet getCustomerAccountsByCustomerId2(string customerId) {
            return base.Channel.getCustomerAccountsByCustomerId2(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByCustomerId2Async(string customerId) {
            return base.Channel.getCustomerAccountsByCustomerId2Async(customerId);
        }
        
        public System.Data.DataSet getCustomerAccountsByCustomerIdbyAppID(string customerId, string appid) {
            return base.Channel.getCustomerAccountsByCustomerIdbyAppID(customerId, appid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByCustomerIdbyAppIDAsync(string customerId, string appid) {
            return base.Channel.getCustomerAccountsByCustomerIdbyAppIDAsync(customerId, appid);
        }
        
        public System.Data.DataSet getCustomerAccountsByEmail(string email) {
            return base.Channel.getCustomerAccountsByEmail(email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByEmailAsync(string email) {
            return base.Channel.getCustomerAccountsByEmailAsync(email);
        }
        
        public System.Data.DataSet getCustomerAccountsByMobileNo(string mobileNo) {
            return base.Channel.getCustomerAccountsByMobileNo(mobileNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerAccountsByMobileNoAsync(string mobileNo) {
            return base.Channel.getCustomerAccountsByMobileNoAsync(mobileNo);
        }
        
        public System.Data.DataSet getProductByCode(string productCode) {
            return base.Channel.getProductByCode(productCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getProductByCodeAsync(string productCode) {
            return base.Channel.getProductByCodeAsync(productCode);
        }
        
        public System.Data.DataSet getCurrencies() {
            return base.Channel.getCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCurrenciesAsync() {
            return base.Channel.getCurrenciesAsync();
        }
        
        public System.Data.DataSet getCurrencyByCode(string currencyCode) {
            return base.Channel.getCurrencyByCode(currencyCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCurrencyByCodeAsync(string currencyCode) {
            return base.Channel.getCurrencyByCodeAsync(currencyCode);
        }
        
        public System.Data.DataSet getCompanies() {
            return base.Channel.getCompanies();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCompaniesAsync() {
            return base.Channel.getCompaniesAsync();
        }
        
        public System.Data.DataSet getCompanyByCode(string companyCode) {
            return base.Channel.getCompanyByCode(companyCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCompanyByCodeAsync(string companyCode) {
            return base.Channel.getCompanyByCodeAsync(companyCode);
        }
        
        public System.Data.DataSet getCompanyByLocation(int locationID) {
            return base.Channel.getCompanyByLocation(locationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCompanyByLocationAsync(int locationID) {
            return base.Channel.getCompanyByLocationAsync(locationID);
        }
        
        public System.Data.DataSet GetRegions() {
            return base.Channel.GetRegions();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRegionsAsync() {
            return base.Channel.GetRegionsAsync();
        }
        
        public System.Data.DataSet GetSortCodes(string bankcode) {
            return base.Channel.GetSortCodes(bankcode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSortCodesAsync(string bankcode) {
            return base.Channel.GetSortCodesAsync(bankcode);
        }
        
        public System.Data.DataSet getStatement(string nuban, System.DateTime sdate, System.DateTime edate) {
            return base.Channel.getStatement(nuban, sdate, edate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getStatementAsync(string nuban, System.DateTime sdate, System.DateTime edate) {
            return base.Channel.getStatementAsync(nuban, sdate, edate);
        }
        
        public System.Data.DataSet getStatementByAppID(string nuban, System.DateTime sdate, System.DateTime edate, string appid) {
            return base.Channel.getStatementByAppID(nuban, sdate, edate, appid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getStatementByAppIDAsync(string nuban, System.DateTime sdate, System.DateTime edate, string appid) {
            return base.Channel.getStatementByAppIDAsync(nuban, sdate, edate, appid);
        }
        
        public System.Data.DataSet getBalances(string nuban, System.DateTime sdate, System.DateTime edate) {
            return base.Channel.getBalances(nuban, sdate, edate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBalancesAsync(string nuban, System.DateTime sdate, System.DateTime edate) {
            return base.Channel.getBalancesAsync(nuban, sdate, edate);
        }
        
        public System.Data.DataSet getLastNTransaction(string nuban, int NoRecord) {
            return base.Channel.getLastNTransaction(nuban, NoRecord);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getLastNTransactionAsync(string nuban, int NoRecord) {
            return base.Channel.getLastNTransactionAsync(nuban, NoRecord);
        }
        
        public System.Data.DataSet getActiveLoans(string customerId) {
            return base.Channel.getActiveLoans(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getActiveLoansAsync(string customerId) {
            return base.Channel.getActiveLoansAsync(customerId);
        }
        
        public System.Data.DataSet T24ACPGetIndivCustomer(string customerId) {
            return base.Channel.T24ACPGetIndivCustomer(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetIndivCustomerAsync(string customerId) {
            return base.Channel.T24ACPGetIndivCustomerAsync(customerId);
        }
        
        public System.Data.DataSet T24ACPGetCustomerAccount(string customerId) {
            return base.Channel.T24ACPGetCustomerAccount(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetCustomerAccountAsync(string customerId) {
            return base.Channel.T24ACPGetCustomerAccountAsync(customerId);
        }
        
        public System.Data.DataSet T24ACPGetCustomerAddress(string customerId) {
            return base.Channel.T24ACPGetCustomerAddress(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetCustomerAddressAsync(string customerId) {
            return base.Channel.T24ACPGetCustomerAddressAsync(customerId);
        }
        
        public System.Data.DataSet T24ACPGetCustomerContact(string customerId) {
            return base.Channel.T24ACPGetCustomerContact(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetCustomerContactAsync(string customerId) {
            return base.Channel.T24ACPGetCustomerContactAsync(customerId);
        }
        
        public System.Data.DataSet T24ACPGetCustomerPartys(string customerId) {
            return base.Channel.T24ACPGetCustomerPartys(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetCustomerPartysAsync(string customerId) {
            return base.Channel.T24ACPGetCustomerPartysAsync(customerId);
        }
        
        public System.Data.DataSet T24ACPGetAllCustomerInfo(string customerId) {
            return base.Channel.T24ACPGetAllCustomerInfo(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24ACPGetAllCustomerInfoAsync(string customerId) {
            return base.Channel.T24ACPGetAllCustomerInfoAsync(customerId);
        }
        
        public System.Data.DataSet T24CAMGetAccountDebitCredit(string acct, System.DateTime sDate, System.DateTime eDate) {
            return base.Channel.T24CAMGetAccountDebitCredit(acct, sDate, eDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24CAMGetAccountDebitCreditAsync(string acct, System.DateTime sDate, System.DateTime eDate) {
            return base.Channel.T24CAMGetAccountDebitCreditAsync(acct, sDate, eDate);
        }
        
        public System.Data.DataSet T24GetAccountFullInfo(string nuban) {
            return base.Channel.T24GetAccountFullInfo(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetAccountFullInfoAsync(string nuban) {
            return base.Channel.T24GetAccountFullInfoAsync(nuban);
        }
        
        public System.Data.DataSet T24GetCompanies() {
            return base.Channel.T24GetCompanies();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetCompaniesAsync() {
            return base.Channel.T24GetCompaniesAsync();
        }
        
        public System.Data.DataSet T24GetCompanyByCode(string nuban) {
            return base.Channel.T24GetCompanyByCode(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetCompanyByCodeAsync(string nuban) {
            return base.Channel.T24GetCompanyByCodeAsync(nuban);
        }
        
        public System.Data.DataSet T24GetLastNTransaction(string nuban, int recordNo) {
            return base.Channel.T24GetLastNTransaction(nuban, recordNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetLastNTransactionAsync(string nuban, int recordNo) {
            return base.Channel.T24GetLastNTransactionAsync(nuban, recordNo);
        }
        
        public System.Data.DataSet GetLastNTransactionRtn(string nuban, string recordNo) {
            return base.Channel.GetLastNTransactionRtn(nuban, recordNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLastNTransactionRtnAsync(string nuban, string recordNo) {
            return base.Channel.GetLastNTransactionRtnAsync(nuban, recordNo);
        }
        
        public System.Data.DataSet T24GetCustomerAccountsByBVN(string bvn) {
            return base.Channel.T24GetCustomerAccountsByBVN(bvn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetCustomerAccountsByBVNAsync(string bvn) {
            return base.Channel.T24GetCustomerAccountsByBVNAsync(bvn);
        }
        
        public System.Data.DataSet T24GetCustomerAccountsByCustomerId(string customerId) {
            return base.Channel.T24GetCustomerAccountsByCustomerId(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetCustomerAccountsByCustomerIdAsync(string customerId) {
            return base.Channel.T24GetCustomerAccountsByCustomerIdAsync(customerId);
        }
        
        public System.Data.DataSet T24GetCustomerAccountsByEmail(string email) {
            return base.Channel.T24GetCustomerAccountsByEmail(email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetCustomerAccountsByEmailAsync(string email) {
            return base.Channel.T24GetCustomerAccountsByEmailAsync(email);
        }
        
        public System.Data.DataSet T24GetCustomerAccountsByMobileNo(string email) {
            return base.Channel.T24GetCustomerAccountsByMobileNo(email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetCustomerAccountsByMobileNoAsync(string email) {
            return base.Channel.T24GetCustomerAccountsByMobileNoAsync(email);
        }
        
        public System.Data.DataSet T24GetCurrencyByCode(string currencyCode) {
            return base.Channel.T24GetCurrencyByCode(currencyCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetCurrencyByCodeAsync(string currencyCode) {
            return base.Channel.T24GetCurrencyByCodeAsync(currencyCode);
        }
        
        public System.Data.DataSet T24GetCurrencies() {
            return base.Channel.T24GetCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24GetCurrenciesAsync() {
            return base.Channel.T24GetCurrenciesAsync();
        }
        
        public System.Data.DataSet T24CAMGetCOTIncome(string acct, System.DateTime sDate, System.DateTime eDate) {
            return base.Channel.T24CAMGetCOTIncome(acct, sDate, eDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> T24CAMGetCOTIncomeAsync(string acct, System.DateTime sDate, System.DateTime eDate) {
            return base.Channel.T24CAMGetCOTIncomeAsync(acct, sDate, eDate);
        }
        
        public System.Data.DataSet AccountCreation(string customerid, string productcode, string currency, string branch, string PND, string dao, string acctName) {
            return base.Channel.AccountCreation(customerid, productcode, currency, branch, PND, dao, acctName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AccountCreationAsync(string customerid, string productcode, string currency, string branch, string PND, string dao, string acctName) {
            return base.Channel.AccountCreationAsync(customerid, productcode, currency, branch, PND, dao, acctName);
        }
        
        public string AmountLockwithoutDate(string account, decimal amt) {
            return base.Channel.AmountLockwithoutDate(account, amt);
        }
        
        public System.Threading.Tasks.Task<string> AmountLockwithoutDateAsync(string account, decimal amt) {
            return base.Channel.AmountLockwithoutDateAsync(account, amt);
        }
        
        public string StopChequePayment(string account, string chequeno) {
            return base.Channel.StopChequePayment(account, chequeno);
        }
        
        public System.Threading.Tasks.Task<string> StopChequePaymentAsync(string account, string chequeno) {
            return base.Channel.StopChequePaymentAsync(account, chequeno);
        }
        
        public string PatialUnLockAmount(string id, string amount) {
            return base.Channel.PatialUnLockAmount(id, amount);
        }
        
        public System.Threading.Tasks.Task<string> PatialUnLockAmountAsync(string id, string amount) {
            return base.Channel.PatialUnLockAmountAsync(id, amount);
        }
        
        public string PlaceStandingOrder(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency) {
            return base.Channel.PlaceStandingOrder(originatingaccount, beneficiaryaccount, amount, startdate, frequency);
        }
        
        public System.Threading.Tasks.Task<string> PlaceStandingOrderAsync(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency) {
            return base.Channel.PlaceStandingOrderAsync(originatingaccount, beneficiaryaccount, amount, startdate, frequency);
        }
        
        public System.Data.DataSet IndvCustomerCreation(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state) {
            return base.Channel.IndvCustomerCreation(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dateofbirth, sms, title, email, middlename, state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> IndvCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state) {
            return base.Channel.IndvCustomerCreationAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dateofbirth, sms, title, email, middlename, state);
        }
        
        public System.Data.DataSet StaffAccountCreation(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename) {
            return base.Channel.StaffAccountCreation(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dateofbirth, sms, title, email, middlename);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> StaffAccountCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename) {
            return base.Channel.StaffAccountCreationAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dateofbirth, sms, title, email, middlename);
        }
        
        public System.Data.DataSet AsscCustomerCreation(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email) {
            return base.Channel.AsscCustomerCreation(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, Incorporationpdate, sms, email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AsscCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email) {
            return base.Channel.AsscCustomerCreationAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, Incorporationpdate, sms, email);
        }
        
        public System.Data.DataSet UserLimit(string username) {
            return base.Channel.UserLimit(username);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UserLimitAsync(string username) {
            return base.Channel.UserLimitAsync(username);
        }
        
        public string RetrieveUserID2(string username) {
            return base.Channel.RetrieveUserID2(username);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveUserID2Async(string username) {
            return base.Channel.RetrieveUserID2Async(username);
        }
        
        public string RetrieveUserID(string username) {
            return base.Channel.RetrieveUserID(username);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveUserIDAsync(string username) {
            return base.Channel.RetrieveUserIDAsync(username);
        }
        
        public System.Data.DataSet GetATMDetail(string stan, string retno, string authcode, string debitacct, string pan) {
            return base.Channel.GetATMDetail(stan, retno, authcode, debitacct, pan);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetATMDetailAsync(string stan, string retno, string authcode, string debitacct, string pan) {
            return base.Channel.GetATMDetailAsync(stan, retno, authcode, debitacct, pan);
        }
        
        public string ATMPassUpdate(string recid, string userid, string pass) {
            return base.Channel.ATMPassUpdate(recid, userid, pass);
        }
        
        public System.Threading.Tasks.Task<string> ATMPassUpdateAsync(string recid, string userid, string pass) {
            return base.Channel.ATMPassUpdateAsync(recid, userid, pass);
        }
        
        public string ATMParameterUpdate(string recid, string userid, string pass) {
            return base.Channel.ATMParameterUpdate(recid, userid, pass);
        }
        
        public System.Threading.Tasks.Task<string> ATMParameterUpdateAsync(string recid, string userid, string pass) {
            return base.Channel.ATMParameterUpdateAsync(recid, userid, pass);
        }
        
        public System.Data.DataSet ValidateDAO(string daocode) {
            return base.Channel.ValidateDAO(daocode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ValidateDAOAsync(string daocode) {
            return base.Channel.ValidateDAOAsync(daocode);
        }
        
        public System.Data.DataSet GetInternalAcctStatement(string acct, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.GetInternalAcctStatement(acct, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetInternalAcctStatementAsync(string acct, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.GetInternalAcctStatementAsync(acct, startdate, enddate);
        }
        
        public string UpdateIntroducer(string customer, string introducer) {
            return base.Channel.UpdateIntroducer(customer, introducer);
        }
        
        public System.Threading.Tasks.Task<string> UpdateIntroducerAsync(string customer, string introducer) {
            return base.Channel.UpdateIntroducerAsync(customer, introducer);
        }
        
        public System.Data.DataSet GetATMTxnDateRange(string debitaccount, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.GetATMTxnDateRange(debitaccount, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetATMTxnDateRangeAsync(string debitaccount, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.GetATMTxnDateRangeAsync(debitaccount, startdate, enddate);
        }
        
        public string UpdateAcctAltID(string AccountNo, string AltAccount, string branch) {
            return base.Channel.UpdateAcctAltID(AccountNo, AltAccount, branch);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAcctAltIDAsync(string AccountNo, string AltAccount, string branch) {
            return base.Channel.UpdateAcctAltIDAsync(AccountNo, AltAccount, branch);
        }
        
        public System.Data.DataSet GetAccountfromDByAccountNum2(string acctnumber) {
            return base.Channel.GetAccountfromDByAccountNum2(acctnumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountfromDByAccountNum2Async(string acctnumber) {
            return base.Channel.GetAccountfromDByAccountNum2Async(acctnumber);
        }
        
        public System.Data.DataSet GetAccountfromDByAccountNum(string acctnumber) {
            return base.Channel.GetAccountfromDByAccountNum(acctnumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountfromDByAccountNumAsync(string acctnumber) {
            return base.Channel.GetAccountfromDByAccountNumAsync(acctnumber);
        }
        
        public System.Data.DataSet GetAccountInfoByRoutine(string acctnumber) {
            return base.Channel.GetAccountInfoByRoutine(acctnumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountInfoByRoutineAsync(string acctnumber) {
            return base.Channel.GetAccountInfoByRoutineAsync(acctnumber);
        }
        
        public string UpdateExistBVN(string customerid, string Bvn) {
            return base.Channel.UpdateExistBVN(customerid, Bvn);
        }
        
        public System.Threading.Tasks.Task<string> UpdateExistBVNAsync(string customerid, string Bvn) {
            return base.Channel.UpdateExistBVNAsync(customerid, Bvn);
        }
        
        public System.Data.DataSet getStatement1(string nuban, System.DateTime sdate, System.DateTime edate) {
            return base.Channel.getStatement1(nuban, sdate, edate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getStatement1Async(string nuban, System.DateTime sdate, System.DateTime edate) {
            return base.Channel.getStatement1Async(nuban, sdate, edate);
        }
        
        public string PlaceRestriction(string nuban, string restcode, string branch) {
            return base.Channel.PlaceRestriction(nuban, restcode, branch);
        }
        
        public System.Threading.Tasks.Task<string> PlaceRestrictionAsync(string nuban, string restcode, string branch) {
            return base.Channel.PlaceRestrictionAsync(nuban, restcode, branch);
        }
        
        public string RemoveRestriction(string nuban, string restcode, string branch) {
            return base.Channel.RemoveRestriction(nuban, restcode, branch);
        }
        
        public System.Threading.Tasks.Task<string> RemoveRestrictionAsync(string nuban, string restcode, string branch) {
            return base.Channel.RemoveRestrictionAsync(nuban, restcode, branch);
        }
        
        public string GetOverdueReport() {
            return base.Channel.GetOverdueReport();
        }
        
        public System.Threading.Tasks.Task<string> GetOverdueReportAsync() {
            return base.Channel.GetOverdueReportAsync();
        }
        
        public string DeriveInternalAccount(string currency, string categoryCode, string sequency, string companyCode) {
            return base.Channel.DeriveInternalAccount(currency, categoryCode, sequency, companyCode);
        }
        
        public System.Threading.Tasks.Task<string> DeriveInternalAccountAsync(string currency, string categoryCode, string sequency, string companyCode) {
            return base.Channel.DeriveInternalAccountAsync(currency, categoryCode, sequency, companyCode);
        }
        
        public string getInternalAccount(string companyCode, string currency, string categoryCode) {
            return base.Channel.getInternalAccount(companyCode, currency, categoryCode);
        }
        
        public System.Threading.Tasks.Task<string> getInternalAccountAsync(string companyCode, string currency, string categoryCode) {
            return base.Channel.getInternalAccountAsync(companyCode, currency, categoryCode);
        }
        
        public string SendEmail(string destinationEmail, string sourceEmail, string body, string subject) {
            return base.Channel.SendEmail(destinationEmail, sourceEmail, body, subject);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailAsync(string destinationEmail, string sourceEmail, string body, string subject) {
            return base.Channel.SendEmailAsync(destinationEmail, sourceEmail, body, subject);
        }
        
        public System.Data.DataSet getAcctInfoByNubanandPhone(string nuban, string mobile) {
            return base.Channel.getAcctInfoByNubanandPhone(nuban, mobile);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAcctInfoByNubanandPhoneAsync(string nuban, string mobile) {
            return base.Channel.getAcctInfoByNubanandPhoneAsync(nuban, mobile);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CardTokenizationAPI.BankSoap.LockAmountWithReasonResponse CardTokenizationAPI.BankSoap.banksSoap.LockAmountWithReason(CardTokenizationAPI.BankSoap.LockAmountWithReasonRequest request) {
            return base.Channel.LockAmountWithReason(request);
        }
        
        public string LockAmountWithReason(string acct, System.Nullable<System.DateTime> sDate, System.Nullable<System.DateTime> eDate, decimal amt, string reasonForLocking) {
            CardTokenizationAPI.BankSoap.LockAmountWithReasonRequest inValue = new CardTokenizationAPI.BankSoap.LockAmountWithReasonRequest();
            inValue.acct = acct;
            inValue.sDate = sDate;
            inValue.eDate = eDate;
            inValue.amt = amt;
            inValue.reasonForLocking = reasonForLocking;
            CardTokenizationAPI.BankSoap.LockAmountWithReasonResponse retVal = ((CardTokenizationAPI.BankSoap.banksSoap)(this)).LockAmountWithReason(inValue);
            return retVal.LockAmountWithReasonResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CardTokenizationAPI.BankSoap.LockAmountWithReasonResponse> CardTokenizationAPI.BankSoap.banksSoap.LockAmountWithReasonAsync(CardTokenizationAPI.BankSoap.LockAmountWithReasonRequest request) {
            return base.Channel.LockAmountWithReasonAsync(request);
        }
        
        public System.Threading.Tasks.Task<CardTokenizationAPI.BankSoap.LockAmountWithReasonResponse> LockAmountWithReasonAsync(string acct, System.Nullable<System.DateTime> sDate, System.Nullable<System.DateTime> eDate, decimal amt, string reasonForLocking) {
            CardTokenizationAPI.BankSoap.LockAmountWithReasonRequest inValue = new CardTokenizationAPI.BankSoap.LockAmountWithReasonRequest();
            inValue.acct = acct;
            inValue.sDate = sDate;
            inValue.eDate = eDate;
            inValue.amt = amt;
            inValue.reasonForLocking = reasonForLocking;
            return ((CardTokenizationAPI.BankSoap.banksSoap)(this)).LockAmountWithReasonAsync(inValue);
        }
        
        public string FormInternalAccount(string companycode, string currency, string ledcode) {
            return base.Channel.FormInternalAccount(companycode, currency, ledcode);
        }
        
        public System.Threading.Tasks.Task<string> FormInternalAccountAsync(string companycode, string currency, string ledcode) {
            return base.Channel.FormInternalAccountAsync(companycode, currency, ledcode);
        }
        
        public System.Data.DataSet SearchCustomerByBvn(string bvn) {
            return base.Channel.SearchCustomerByBvn(bvn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchCustomerByBvnAsync(string bvn) {
            return base.Channel.SearchCustomerByBvnAsync(bvn);
        }
    }
}
